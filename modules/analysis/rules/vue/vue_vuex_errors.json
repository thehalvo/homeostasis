{
  "metadata": {
    "name": "Vue Vuex State Management Errors",
    "description": "Vuex state management specific error patterns and their fixes",
    "version": "1.0.0",
    "language": "vue",
    "framework": "vuex",
    "last_updated": "2024-01-01"
  },
  "rules": [
    {
      "id": "vuex_store_not_defined",
      "pattern": "(?i)store is not defined|'store' is not defined|\\$store.*undefined",
      "category": "vue",
      "subcategory": "vuex",
      "severity": "error",
      "confidence": "high",
      "reliability": "high",
      "root_cause": "vuex_store_not_imported",
      "suggestion": "Import and configure Vuex store. Ensure the store is properly installed in your Vue application.",
      "fix_commands": [
        "Import store: import store from './store'",
        "Install in Vue app: app.use(store)",
        "Check store configuration and export"
      ],
      "tags": [
        "vue",
        "vuex",
        "store",
        "import"
      ],
      "examples": [
        "ReferenceError: store is not defined"
      ],
      "description": "Vuex Store Not Defined"
    },
    {
      "id": "vuex_mutation_not_found",
      "pattern": "(?i)mutation type.*not found|unknown mutation type|mutation.*does not exist",
      "category": "vue",
      "subcategory": "vuex",
      "severity": "error",
      "confidence": "high",
      "reliability": "high",
      "root_cause": "vuex_undefined_mutation",
      "suggestion": "Define the mutation in your Vuex store. Check mutation name spelling and case sensitivity.",
      "fix_commands": [
        "Add mutation to store mutations object",
        "Check mutation name spelling",
        "Ensure proper mutation export",
        "Verify module namespace if using modules"
      ],
      "tags": [
        "vue",
        "vuex",
        "mutations",
        "undefined"
      ],
      "examples": [
        "unknown mutation type: INCREMENT_COUNTER"
      ],
      "description": "Vuex Mutation Not Found"
    },
    {
      "id": "vuex_action_not_found",
      "pattern": "(?i)action type.*not found|unknown action type|action.*does not exist",
      "category": "vue",
      "subcategory": "vuex",
      "severity": "error",
      "confidence": "high",
      "reliability": "high",
      "root_cause": "vuex_undefined_action",
      "suggestion": "Define the action in your Vuex store. Check action name spelling and case sensitivity.",
      "fix_commands": [
        "Add action to store actions object",
        "Check action name spelling",
        "Ensure proper action export",
        "Verify module namespace if using modules"
      ],
      "tags": [
        "vue",
        "vuex",
        "actions",
        "undefined"
      ],
      "examples": [
        "unknown action type: fetchUserData"
      ],
      "description": "Vuex Action Not Found"
    },
    {
      "id": "vuex_direct_state_mutation",
      "pattern": "(?i)do not mutate vuex store state outside mutation handlers",
      "category": "vue",
      "subcategory": "vuex",
      "severity": "error",
      "confidence": "high",
      "reliability": "high",
      "root_cause": "vuex_direct_state_mutation",
      "suggestion": "Use mutations to modify Vuex state. Direct state mutations are not allowed outside of mutation handlers.",
      "fix_commands": [
        "Replace direct state assignment with commit() calls",
        "Create mutations for state modifications",
        "Use this.$store.commit('mutationName', payload)"
      ],
      "tags": [
        "vue",
        "vuex",
        "mutations",
        "state"
      ],
      "examples": [
        "Do not mutate vuex store state outside mutation handlers"
      ],
      "description": "Vuex Direct State Mutation"
    },
    {
      "id": "vuex_module_not_found",
      "pattern": "(?i)module.*not found|unknown module|module.*does not exist",
      "category": "vue",
      "subcategory": "vuex",
      "severity": "error",
      "confidence": "high",
      "reliability": "high",
      "root_cause": "vuex_module_not_found",
      "suggestion": "Register the Vuex module in your store configuration. Check module name and path.",
      "fix_commands": [
        "Register module in store modules object",
        "Check module import path",
        "Ensure proper module export",
        "Verify module structure"
      ],
      "tags": [
        "vue",
        "vuex",
        "modules",
        "registration"
      ],
      "examples": [
        "unknown module: user"
      ],
      "description": "Vuex Module Not Found"
    },
    {
      "id": "vuex_getter_not_found",
      "pattern": "(?i)getter.*not found|unknown getter|getter.*does not exist",
      "category": "vue",
      "subcategory": "vuex",
      "severity": "error",
      "confidence": "high",
      "reliability": "high",
      "root_cause": "vuex_undefined_getter",
      "suggestion": "Define the getter in your Vuex store getters object. Check getter name spelling.",
      "fix_commands": [
        "Add getter to store getters object",
        "Check getter name spelling",
        "Ensure proper getter function definition",
        "Verify module namespace if using modules"
      ],
      "tags": [
        "vue",
        "vuex",
        "getters",
        "undefined"
      ],
      "examples": [
        "unknown getter: getUserById"
      ],
      "description": "Vuex Getter Not Found"
    },
    {
      "id": "vuex_async_mutation",
      "pattern": "(?i)mutation.*async|mutation.*promise|await.*mutation",
      "category": "vue",
      "subcategory": "vuex",
      "severity": "warning",
      "confidence": "medium",
      "reliability": "medium",
      "root_cause": "vuex_async_mutation",
      "suggestion": "Mutations should be synchronous. Use actions for async operations and commit mutations from actions.",
      "fix_commands": [
        "Move async logic to actions",
        "Use actions to commit mutations",
        "Keep mutations synchronous",
        "Use async/await in actions, not mutations"
      ],
      "tags": [
        "vue",
        "vuex",
        "mutations",
        "async"
      ],
      "examples": [
        "Mutations should be synchronous"
      ],
      "description": "Vuex Async Mutation"
    },
    {
      "id": "vuex_mapstate_error",
      "pattern": "(?i)mapState.*error|mapState.*undefined|mapState.*not found",
      "category": "vue",
      "subcategory": "vuex",
      "severity": "error",
      "confidence": "medium",
      "reliability": "medium",
      "root_cause": "vuex_mapstate_error",
      "suggestion": "Check mapState usage and ensure state properties exist. Import mapState from vuex.",
      "fix_commands": [
        "Import mapState: import { mapState } from 'vuex'",
        "Check state property names",
        "Verify module namespace",
        "Use computed property syntax"
      ],
      "tags": [
        "vue",
        "vuex",
        "mapstate",
        "helpers"
      ],
      "examples": [
        "mapState error: property not found"
      ],
      "description": "Vuex Mapstate"
    },
    {
      "id": "vuex_namespace_error",
      "pattern": "(?i)namespace.*not found|invalid namespace|module namespace.*error",
      "category": "vue",
      "subcategory": "vuex",
      "severity": "error",
      "confidence": "high",
      "reliability": "high",
      "root_cause": "vuex_namespace_error",
      "suggestion": "Check module namespace configuration. Ensure namespaced modules are properly registered.",
      "fix_commands": [
        "Set namespaced: true in module",
        "Use correct namespace string",
        "Check module registration",
        "Use namespace helpers correctly"
      ],
      "tags": [
        "vue",
        "vuex",
        "namespace",
        "modules"
      ],
      "examples": [
        "Module namespace 'user/' not found"
      ],
      "description": "Vuex Namespace"
    },
    {
      "id": "vuex_payload_error",
      "pattern": "(?i)payload.*undefined|invalid payload|payload.*required",
      "category": "vue",
      "subcategory": "vuex",
      "severity": "warning",
      "confidence": "medium",
      "reliability": "medium",
      "root_cause": "vuex_payload_error",
      "suggestion": "Check mutation/action payload. Ensure proper payload structure and validation.",
      "fix_commands": [
        "Validate payload in mutations/actions",
        "Provide default values for payload",
        "Check payload structure",
        "Use payload destructuring carefully"
      ],
      "tags": [
        "vue",
        "vuex",
        "payload",
        "validation"
      ],
      "examples": [
        "Payload is required for this mutation"
      ],
      "description": "Vuex Payload"
    }
  ],
  "name": "Vue Vuex Errors"
}