{
  "name": "Elixir Phoenix Errors",
  "rules": [
    {
      "id": "phoenix_conn_already_sent",
      "pattern": "\\*\\* \\(Plug\\.Conn\\.AlreadySentError\\) (.*)",
      "type": "Plug.Conn.AlreadySentError",
      "description": "Attempted to modify the connection after it was already sent",
      "root_cause": "phoenix_conn_already_sent",
      "suggestion": "Check your controller actions and plugs to ensure they're not trying to send multiple responses. Avoid calling render, redirect, or any other function that sends a response multiple times.",
      "confidence": "high",
      "severity": "medium",
      "category": "phoenix",
      "framework": "phoenix"
    },
    {
      "id": "phoenix_router_error",
      "pattern": "\\*\\* \\(Phoenix\\.Router\\.NoRouteError\\) (.*)",
      "type": "Phoenix.Router.NoRouteError",
      "description": "No route found to handle the request",
      "root_cause": "phoenix_router_error",
      "suggestion": "Check your router configuration to ensure you've defined a route for the requested path. Verify URL formats in your templates and redirects.",
      "confidence": "high",
      "severity": "medium",
      "category": "phoenix",
      "framework": "phoenix"
    },
    {
      "id": "phoenix_view_error",
      "pattern": "\\*\\* \\(Phoenix\\.Template\\.UndefinedError\\) (.*)",
      "type": "Phoenix.Template.UndefinedError",
      "description": "Template not found or undefined variable in template",
      "root_cause": "phoenix_view_error",
      "suggestion": "Ensure the template file exists in the correct directory. Check for typos in template names and available assigns.",
      "confidence": "high",
      "severity": "medium",
      "category": "phoenix",
      "framework": "phoenix"
    },
    {
      "id": "phoenix_action_clause_error",
      "pattern": "\\*\\* \\(FunctionClauseError\\) no function clause matching in (.*?)Controller\\.action/2",
      "type": "FunctionClauseError",
      "description": "Controller action not found or invalid parameters",
      "root_cause": "phoenix_action_clause_error",
      "suggestion": "Make sure the action is defined in the controller. Check the router configuration to ensure it's routing to the correct controller and action.",
      "confidence": "high",
      "severity": "medium",
      "category": "phoenix",
      "framework": "phoenix"
    },
    {
      "id": "phoenix_channel_error",
      "pattern": "\\*\\* \\(Phoenix\\.([a-zA-Z]+\\.)?ChannelError\\) (.*)",
      "type": "Phoenix.ChannelError",
      "description": "Error in Phoenix Channel handling",
      "root_cause": "phoenix_channel_error",
      "suggestion": "Check your channel code for common issues like trying to push to a socket that's already closed, or incorrect channel topic patterns.",
      "confidence": "high",
      "severity": "medium",
      "category": "phoenix",
      "framework": "phoenix"
    },
    {
      "id": "phoenix_notfound_error",
      "pattern": "\\*\\* \\(Phoenix\\.NotAcceptableError\\) (.*)",
      "type": "Phoenix.NotAcceptableError",
      "description": "No view found to render response for the client's accepted formats",
      "root_cause": "phoenix_notacceptable_error",
      "suggestion": "Implement a view that can handle the requested content type, or modify the accepts pipeline to support only the formats you're providing.",
      "confidence": "high",
      "severity": "medium",
      "category": "phoenix",
      "framework": "phoenix"
    },
    {
      "id": "phoenix_csrf_error",
      "pattern": "\\*\\* \\(Phoenix\\.ActionClauseError\\) (.*?)invalid CSRF token(.*)",
      "type": "Phoenix.ActionClauseError",
      "description": "CSRF token validation failed",
      "root_cause": "phoenix_csrf_error",
      "suggestion": "Ensure your forms include a valid CSRF token via <%= csrf_meta_tag() %> in the layout head or <%= csrf_token_tag() %> in each form. For API calls, consider using the :api pipeline which often doesn't require CSRF tokens.",
      "confidence": "high",
      "severity": "high",
      "category": "phoenix",
      "framework": "phoenix"
    },
    {
      "id": "phoenix_param_error",
      "pattern": "\\*\\* \\(Phoenix\\.MissingParamError\\) (.*)",
      "type": "Phoenix.MissingParamError",
      "description": "Required parameter missing from request",
      "root_cause": "phoenix_param_error",
      "suggestion": "Check that all required parameters are being passed. Use pattern matching with default values or handle the case when parameters are missing explicitly.",
      "confidence": "high",
      "severity": "medium",
      "category": "phoenix",
      "framework": "phoenix"
    },
    {
      "id": "phoenix_token_error",
      "pattern": "\\*\\* \\(Phoenix\\.Token\\.(.*?)Error\\) (.*)",
      "type": "Phoenix.Token.Error",
      "description": "Error verifying or generating a Phoenix token",
      "root_cause": "phoenix_token_error",
      "suggestion": "Check token signing salt values, verify your secret_key_base is consistent, and check token expiration settings. Ensure you're validating tokens correctly with Phoenix.Token.verify/4.",
      "confidence": "high",
      "severity": "high",
      "category": "phoenix",
      "framework": "phoenix"
    },
    {
      "id": "phoenix_pubsub_error",
      "pattern": "\\*\\* \\(Phoenix\\.PubSub\\.(.*?)Error\\) (.*)",
      "type": "Phoenix.PubSub.Error",
      "description": "Error in Phoenix PubSub system",
      "root_cause": "phoenix_pubsub_error",
      "suggestion": "Check your PubSub configuration and ensure your cluster is properly configured. For local development, ensure the process is still alive.",
      "confidence": "high",
      "severity": "medium",
      "category": "phoenix",
      "framework": "phoenix"
    },
    {
      "id": "phoenix_conflict_error",
      "pattern": "\\*\\* \\(Plug\\.Exception\\) (.*?)status: 409, message: (.*)",
      "type": "Plug.Exception",
      "description": "Conflict error (HTTP 409)",
      "root_cause": "phoenix_conflict_error",
      "suggestion": "Handle resource conflicts properly in your controller. Implement a way to deal with concurrent updates or unique constraint violations.",
      "confidence": "high",
      "severity": "medium",
      "category": "phoenix",
      "framework": "phoenix"
    },
    {
      "id": "phoenix_forbidden_error",
      "pattern": "\\*\\* \\(Plug\\.Exception\\) (.*?)status: 403, message: (.*)",
      "type": "Plug.Exception",
      "description": "Forbidden error (HTTP 403)",
      "root_cause": "phoenix_forbidden_error",
      "suggestion": "Implement proper authorization checks in your controllers and plugs. Use a consistent authorization system like `Canada` or a custom solution.",
      "confidence": "high",
      "severity": "medium",
      "category": "phoenix",
      "framework": "phoenix"
    },
    {
      "id": "phoenix_socket_error",
      "pattern": "\\*\\* \\(Phoenix\\.Socket\\.(.*?)Error\\) (.*)",
      "type": "Phoenix.Socket.Error",
      "description": "Error in Phoenix WebSocket",
      "root_cause": "phoenix_socket_error",
      "suggestion": "Check your Socket implementation for issues with authentication or transport. Ensure your channel joins are properly handled.",
      "confidence": "high",
      "severity": "medium",
      "category": "phoenix",
      "framework": "phoenix"
    },
    {
      "id": "phoenix_live_view_error",
      "pattern": "\\*\\* \\(Phoenix\\.LiveView\\.(.*?)Error\\) (.*)",
      "type": "Phoenix.LiveView.Error",
      "description": "Error in Phoenix LiveView",
      "root_cause": "phoenix_live_view_error",
      "suggestion": "Check your LiveView implementation, especially the mount/3, handle_event/3, and render/1 callbacks. Ensure all assign keys are initialized in mount/3.",
      "confidence": "high",
      "severity": "medium",
      "category": "phoenix",
      "framework": "phoenix"
    },
    {
      "id": "phoenix_plug_error",
      "pattern": "\\*\\* \\(Plug\\.(.*?)Error\\) (.*)",
      "type": "Plug.Error",
      "description": "Error in Plug middleware",
      "root_cause": "phoenix_plug_error",
      "suggestion": "Check your Plug implementations and the order of plugs in your pipeline. Ensure all necessary plugs are included in your controller or router.",
      "confidence": "high",
      "severity": "medium",
      "category": "phoenix",
      "framework": "phoenix"
    }
  ]
}