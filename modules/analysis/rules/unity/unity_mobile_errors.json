{
  "name": "Unity Mobile Platform Errors",
  "description": "Rules for detecting and fixing Unity mobile platform specific errors (Android/iOS)",
  "version": "1.0.0",
  "rules": [
    {
      "id": "unity_android_gradle_build_failed",
      "pattern": "BuildFailedException.*Android.*|Gradle.*build.*failed.*Unity.*|Android.*build.*error.*gradle.*",
      "type": "UnityEditor.Build.BuildFailedException",
      "description": "Android Gradle build failed",
      "root_cause": "unity_android_gradle_error",
      "suggestion": "Check Android SDK/NDK versions in Unity preferences. Verify Gradle version compatibility and check for conflicting plugins in mainTemplate.gradle.",
      "confidence": "high",
      "severity": "high",
      "category": "android_build",
      "framework": "unity",
      "tags": ["unity", "android", "gradle", "build"]
    },
    {
      "id": "unity_ios_xcode_build_failed",
      "pattern": "BuildFailedException.*iOS.*|Xcode.*build.*failed.*Unity.*|iOS.*build.*error.*xcode.*",
      "type": "UnityEditor.Build.BuildFailedException",
      "description": "iOS Xcode build failed",
      "root_cause": "unity_ios_xcode_error",
      "suggestion": "Check iOS deployment target compatibility. Verify Xcode version and iOS SDK. Update provisioning profiles and certificates in Xcode project.",
      "confidence": "high",
      "severity": "high",
      "category": "ios_build",
      "framework": "unity",
      "tags": ["unity", "ios", "xcode", "build"]
    },
    {
      "id": "unity_android_sdk_not_found",
      "pattern": "Android.*SDK.*not.*found.*|ANDROID_SDK_ROOT.*not.*set.*|Android.*SDK.*path.*invalid.*",
      "type": "UnityEditor.Build.BuildFailedException",
      "description": "Android SDK not found or not properly configured",
      "root_cause": "unity_android_sdk_error",
      "suggestion": "Install Android SDK via Unity Hub or Android Studio. Set correct SDK path in Unity Preferences > External Tools > Android SDK.",
      "confidence": "high",
      "severity": "high",
      "category": "android_sdk",
      "framework": "unity",
      "tags": ["unity", "android", "sdk", "configuration"]
    },
    {
      "id": "unity_android_ndk_not_found",
      "pattern": "Android.*NDK.*not.*found.*|ANDROID_NDK_ROOT.*not.*set.*|Android.*NDK.*path.*invalid.*",
      "type": "UnityEditor.Build.BuildFailedException",
      "description": "Android NDK not found or not properly configured",
      "root_cause": "unity_android_ndk_error",
      "suggestion": "Install Android NDK via Unity Hub or Android Studio. Set correct NDK path in Unity Preferences > External Tools > Android NDK.",
      "confidence": "high",
      "severity": "medium",
      "category": "android_ndk",
      "framework": "unity",
      "tags": ["unity", "android", "ndk", "configuration"]
    },
    {
      "id": "unity_ios_provisioning_profile_error",
      "pattern": "Provisioning.*profile.*error.*iOS.*|Code.*signing.*failed.*Unity.*iOS.*|Certificate.*not.*found.*iOS.*",
      "type": "System.InvalidOperationException",
      "description": "iOS provisioning profile or code signing error",
      "root_cause": "unity_ios_provisioning_error",
      "suggestion": "Update provisioning profiles in Apple Developer portal. Configure code signing in Unity iOS Build Settings or Xcode project settings.",
      "confidence": "high",
      "severity": "high",
      "category": "ios_provisioning",
      "framework": "unity",
      "tags": ["unity", "ios", "provisioning", "code-signing"]
    },
    {
      "id": "unity_mobile_memory_warning",
      "pattern": "Application.*received.*memory.*warning.*|Low.*memory.*warning.*mobile.*Unity.*",
      "type": "MemoryWarning",
      "description": "Mobile device running low on memory",
      "root_cause": "unity_mobile_memory_warning",
      "suggestion": "Optimize texture compression, reduce draw calls, and implement object pooling. Use Unity Profiler to identify memory usage patterns.",
      "confidence": "high",
      "severity": "medium",
      "category": "mobile_memory",
      "framework": "unity",
      "tags": ["unity", "mobile", "memory", "optimization"]
    },
    {
      "id": "unity_mobile_performance_fps_drop",
      "pattern": "Frame.*rate.*dropped.*mobile.*|FPS.*below.*target.*mobile.*Unity.*",
      "type": "PerformanceWarning",
      "description": "Frame rate drop on mobile device",
      "root_cause": "unity_mobile_performance_fps",
      "suggestion": "Reduce quality settings for mobile platforms. Optimize shaders, use LOD groups, and implement frustum culling. Set appropriate target frame rate.",
      "confidence": "medium",
      "severity": "medium",
      "category": "mobile_performance",
      "framework": "unity",
      "tags": ["unity", "mobile", "performance", "fps"]
    },
    {
      "id": "unity_android_permission_denied",
      "pattern": "Permission.*denied.*Android.*Unity.*|SecurityException.*Android.*permission.*",
      "type": "System.Security.SecurityException",
      "description": "Android permission denied for required feature",
      "root_cause": "unity_android_permission_denied",
      "suggestion": "Add required permissions to AndroidManifest.xml. Request runtime permissions for dangerous permissions using Unity's Permission class.",
      "confidence": "high",
      "severity": "medium",
      "category": "android_permissions",
      "framework": "unity",
      "tags": ["unity", "android", "permissions", "security"]
    },
    {
      "id": "unity_ios_app_store_validation_failed",
      "pattern": "App.*Store.*validation.*failed.*|iTunes.*Connect.*upload.*error.*Unity.*iOS.*",
      "type": "System.InvalidOperationException",
      "description": "iOS App Store validation failed",
      "root_cause": "unity_ios_app_store_validation",
      "suggestion": "Check app icons, bundle identifier, and version numbers. Ensure all required metadata is set in Unity iOS Build Settings.",
      "confidence": "medium",
      "severity": "medium",
      "category": "ios_app_store",
      "framework": "unity",
      "tags": ["unity", "ios", "app-store", "validation"]
    },
    {
      "id": "unity_mobile_touch_input_not_working",
      "pattern": "Touch.*input.*not.*working.*mobile.*|Input.touches.*empty.*mobile.*",
      "type": "System.InvalidOperationException",
      "description": "Touch input not working on mobile device",
      "root_cause": "unity_mobile_touch_input",
      "suggestion": "Check if Input.simulateMouseWithTouches is enabled for testing. Use Input.touchCount and Input.GetTouch() for mobile touch handling.",
      "confidence": "medium",
      "severity": "medium",
      "category": "mobile_input",
      "framework": "unity",
      "tags": ["unity", "mobile", "input", "touch"]
    },
    {
      "id": "unity_android_api_level_mismatch",
      "pattern": "API.*level.*mismatch.*Android.*|Target.*API.*level.*unsupported.*",
      "type": "UnityEditor.Build.BuildFailedException",
      "description": "Android API level mismatch or unsupported",
      "root_cause": "unity_android_api_level_mismatch",
      "suggestion": "Set appropriate Minimum and Target API levels in Unity Android Build Settings. Ensure compatibility with Google Play requirements.",
      "confidence": "high",
      "severity": "medium",
      "category": "android_api",
      "framework": "unity",
      "tags": ["unity", "android", "api-level", "build"]
    },
    {
      "id": "unity_ios_deployment_target_incompatible",
      "pattern": "iOS.*deployment.*target.*incompatible.*|Minimum.*iOS.*version.*not.*supported.*",
      "type": "UnityEditor.Build.BuildFailedException",
      "description": "iOS deployment target incompatible with Unity version",
      "root_cause": "unity_ios_deployment_target",
      "suggestion": "Update iOS deployment target in Unity iOS Build Settings to match Unity's minimum supported iOS version.",
      "confidence": "high",
      "severity": "medium",
      "category": "ios_deployment",
      "framework": "unity",
      "tags": ["unity", "ios", "deployment-target", "compatibility"]
    },
    {
      "id": "unity_mobile_device_orientation_error",
      "pattern": "Device.*orientation.*not.*supported.*mobile.*|Screen.*orientation.*error.*Unity.*",
      "type": "System.InvalidOperationException",
      "description": "Mobile device orientation not properly handled",
      "root_cause": "unity_mobile_orientation_error",
      "suggestion": "Configure supported orientations in Unity Player Settings. Handle orientation changes in code using Screen.orientation events.",
      "confidence": "medium",
      "severity": "low",
      "category": "mobile_orientation",
      "framework": "unity",
      "tags": ["unity", "mobile", "orientation", "screen"]
    },
    {
      "id": "unity_mobile_battery_optimization_warning",
      "pattern": "Battery.*optimization.*affecting.*app.*|Background.*processing.*limited.*mobile.*",
      "type": "PerformanceWarning",
      "description": "Mobile battery optimization affecting app performance",
      "root_cause": "unity_mobile_battery_optimization",
      "suggestion": "Implement proper application pause/resume handling. Reduce background processing and optimize power consumption using OnApplicationPause.",
      "confidence": "low",
      "severity": "low",
      "category": "mobile_battery",
      "framework": "unity",
      "tags": ["unity", "mobile", "battery", "optimization"]
    },
    {
      "id": "unity_mobile_safe_area_not_handled",
      "pattern": "Safe.*area.*not.*handled.*mobile.*|UI.*clipped.*by.*notch.*mobile.*",
      "type": "UILayoutException",
      "description": "Mobile UI not handling safe area properly (notch, home indicator)",
      "root_cause": "unity_mobile_safe_area",
      "suggestion": "Use Screen.safeArea to get safe area bounds and adjust UI layout accordingly. Consider using Canvas Scaler with safe area support.",
      "confidence": "medium",
      "severity": "low",
      "category": "mobile_ui",
      "framework": "unity",
      "tags": ["unity", "mobile", "ui", "safe-area"]
    }
  ]
}