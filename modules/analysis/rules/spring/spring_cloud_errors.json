{
  "name": "Spring Spring Cloud Errors",
  "rules": [
    {
      "id": "spring_cloud_eureka_connection_failed",
      "pattern": "(?:com\\.netflix\\.discovery\\.DiscoveryClient|org\\.springframework\\.cloud\\.netflix\\.eureka)(?:.*?(?:eureka|discovery|registration).*?(?:failed|error|exception).*?)?",
      "type": "EurekaConnectionException",
      "description": "Failed to connect to Eureka service discovery",
      "root_cause": "spring_cloud_eureka_connection_error",
      "suggestion": "Check Eureka server availability and configuration. Verify eureka.client.service-url.defaultZone property. Ensure network connectivity to Eureka server. Check Eureka server health status.",
      "confidence": "high",
      "severity": "high",
      "category": "spring_cloud",
      "framework": "spring"
    },
    {
      "id": "spring_cloud_config_server_unavailable",
      "pattern": "(?:org\\.springframework\\.cloud\\.config\\.client\\.ConfigServicePropertySourceLocator|org\\.springframework\\.web\\.client\\.ResourceAccessException)(?:.*?config.*?server.*?)?",
      "type": "ConfigServerException",
      "description": "Config server is unavailable or unreachable",
      "root_cause": "spring_cloud_config_server_error",
      "suggestion": "Check Config Server availability and URL configuration. Verify spring.cloud.config.uri property. Ensure Config Server is running and accessible. Consider using fail-fast=false for graceful degradation.",
      "confidence": "high",
      "severity": "high",
      "category": "spring_cloud",
      "framework": "spring"
    },
    {
      "id": "spring_cloud_feign_client_error",
      "pattern": "(?:feign\\.(?:FeignException|RetryableException)|org\\.springframework\\.cloud\\.openfeign\\.FeignClient)(?:.*?(?:feign|client|service).*?)?",
      "type": "FeignException",
      "description": "Feign client request failed",
      "root_cause": "spring_cloud_feign_error",
      "suggestion": "Check target service availability and health. Verify Feign client configuration and URL. Implement proper error handling and fallback methods. Consider using circuit breaker pattern.",
      "confidence": "high",
      "severity": "medium",
      "category": "spring_cloud",
      "framework": "spring"
    },
    {
      "id": "spring_cloud_hystrix_circuit_open",
      "pattern": "(?:com\\.netflix\\.hystrix\\.exception\\.HystrixRuntimeException|java\\.lang\\.RuntimeException)(?:.*?(?:circuit.*?open|hystrix).*?)?",
      "type": "HystrixCircuitOpenException",
      "description": "Hystrix circuit breaker is open",
      "root_cause": "spring_cloud_hystrix_circuit_open",
      "suggestion": "Check downstream service health and availability. Review circuit breaker thresholds and timeout settings. Implement proper fallback methods. Monitor service metrics and error rates.",
      "confidence": "high",
      "severity": "medium",
      "category": "spring_cloud",
      "framework": "spring"
    },
    {
      "id": "spring_cloud_zuul_routing_error",
      "pattern": "(?:com\\.netflix\\.zuul\\.exception\\.ZuulException|org\\.springframework\\.cloud\\.netflix\\.zuul)(?:.*?(?:routing|zuul|gateway).*?)?",
      "type": "ZuulException",
      "description": "Zuul API Gateway routing error",
      "root_cause": "spring_cloud_zuul_routing_error",
      "suggestion": "Check Zuul routing configuration and service discovery. Verify route mappings and service availability. Review load balancer configuration. Ensure proper service registration.",
      "confidence": "high",
      "severity": "medium",
      "category": "spring_cloud",
      "framework": "spring"
    },
    {
      "id": "spring_cloud_gateway_routing_error",
      "pattern": "org\\.springframework\\.cloud\\.gateway\\.(?:support\\.ServerWebExchangeUtils|filter\\.factory)(?:.*?(?:gateway|routing|filter).*?)?",
      "type": "GatewayException",
      "description": "Spring Cloud Gateway routing or filter error",
      "root_cause": "spring_cloud_gateway_error",
      "suggestion": "Check Gateway route configuration and predicates. Verify filter chain configuration. Ensure target services are discoverable and healthy. Review Gateway filter implementations.",
      "confidence": "high",
      "severity": "medium",
      "category": "spring_cloud",
      "framework": "spring"
    },
    {
      "id": "spring_cloud_ribbon_load_balancer_error",
      "pattern": "(?:com\\.netflix\\.loadbalancer\\.(?:LoadBalancerCommand|ServerStats)|org\\.springframework\\.cloud\\.netflix\\.ribbon)(?:.*?(?:ribbon|load.*?balancer).*?)?",
      "type": "RibbonException",
      "description": "Ribbon load balancer error",
      "root_cause": "spring_cloud_ribbon_error",
      "suggestion": "Check service instance availability in service registry. Verify Ribbon configuration and retry settings. Ensure proper health check configuration. Review load balancing strategy.",
      "confidence": "high",
      "severity": "medium",
      "category": "spring_cloud",
      "framework": "spring"
    },
    {
      "id": "spring_cloud_sleuth_tracing_error",
      "pattern": "(?:org\\.springframework\\.cloud\\.sleuth|brave\\.(?:Tracer|Span))(?:.*?(?:sleuth|tracing|span).*?)?",
      "type": "SleuthTracingException",
      "description": "Spring Cloud Sleuth distributed tracing error",
      "root_cause": "spring_cloud_sleuth_error",
      "suggestion": "Check tracing configuration and sampling settings. Verify Zipkin or Jaeger server connectivity. Ensure proper span context propagation. Review tracing dependencies and versions.",
      "confidence": "medium",
      "severity": "low",
      "category": "spring_cloud",
      "framework": "spring"
    },
    {
      "id": "spring_cloud_consul_connection_error",
      "pattern": "(?:com\\.ecwid\\.consul\\.v1\\.ConsulClient|org\\.springframework\\.cloud\\.consul)(?:.*?(?:consul|discovery).*?)?",
      "type": "ConsulException",
      "description": "Consul service discovery connection error",
      "root_cause": "spring_cloud_consul_error",
      "suggestion": "Check Consul server availability and configuration. Verify consul connection properties. Ensure proper ACL tokens if security is enabled. Check network connectivity to Consul cluster.",
      "confidence": "high",
      "severity": "high",
      "category": "spring_cloud",
      "framework": "spring"
    },
    {
      "id": "spring_cloud_zookeeper_connection_error",
      "pattern": "(?:org\\.apache\\.curator\\.framework\\.CuratorFramework|org\\.springframework\\.cloud\\.zookeeper)(?:.*?(?:zookeeper|curator).*?)?",
      "type": "ZookeeperException",
      "description": "Zookeeper service discovery connection error",
      "root_cause": "spring_cloud_zookeeper_error",
      "suggestion": "Check Zookeeper ensemble availability and configuration. Verify connection string and session timeout. Ensure proper Zookeeper ACLs if security is enabled. Check network connectivity.",
      "confidence": "high",
      "severity": "high",
      "category": "spring_cloud",
      "framework": "spring"
    },
    {
      "id": "spring_cloud_stream_binding_error",
      "pattern": "org\\.springframework\\.cloud\\.stream\\.(?:binding\\.BindingService|binder)(?:.*?(?:binding|stream|binder).*?)?",
      "type": "StreamBindingException",
      "description": "Spring Cloud Stream binding error",
      "root_cause": "spring_cloud_stream_binding_error",
      "suggestion": "Check stream binding configuration and binder settings. Verify message broker connectivity (RabbitMQ, Kafka). Ensure proper channel definitions and content types. Review binder-specific configuration.",
      "confidence": "high",
      "severity": "medium",
      "category": "spring_cloud",
      "framework": "spring"
    },
    {
      "id": "spring_cloud_bus_message_error",
      "pattern": "org\\.springframework\\.cloud\\.bus\\.(?:BusProperties|event)(?:.*?(?:bus|message|event).*?)?",
      "type": "CloudBusException",
      "description": "Spring Cloud Bus message processing error",
      "root_cause": "spring_cloud_bus_error",
      "suggestion": "Check message broker connectivity and configuration. Verify bus destination and routing key settings. Ensure proper message serialization/deserialization. Review bus event handlers.",
      "confidence": "medium",
      "severity": "low",
      "category": "spring_cloud",
      "framework": "spring"
    },
    {
      "id": "spring_cloud_contract_verification_failed",
      "pattern": "org\\.springframework\\.cloud\\.contract\\.(?:stubrunner|verifier)(?:.*?(?:contract|verification|stub).*?)?",
      "type": "ContractVerificationException",
      "description": "Spring Cloud Contract verification failed",
      "root_cause": "spring_cloud_contract_verification_error",
      "suggestion": "Check contract definitions and implementations. Verify stub configurations and mappings. Ensure proper contract versioning. Review test setup and contract base classes.",
      "confidence": "medium",
      "severity": "low",
      "category": "spring_cloud",
      "framework": "spring"
    },
    {
      "id": "spring_cloud_vault_authentication_error",
      "pattern": "org\\.springframework\\.vault\\.(?:authentication|core\\.VaultException)(?:.*?(?:vault|authentication|secret).*?)?",
      "type": "VaultException",
      "description": "Spring Cloud Vault authentication or secret access error",
      "root_cause": "spring_cloud_vault_error",
      "suggestion": "Check Vault server connectivity and authentication configuration. Verify vault tokens and policies. Ensure proper secret paths and permissions. Review Vault authentication method configuration.",
      "confidence": "high",
      "severity": "high",
      "category": "spring_cloud",
      "framework": "spring"
    },
    {
      "id": "spring_cloud_kubernetes_discovery_error",
      "pattern": "org\\.springframework\\.cloud\\.kubernetes\\.(?:discovery|client)(?:.*?(?:kubernetes|k8s|discovery).*?)?",
      "type": "KubernetesDiscoveryException",
      "description": "Kubernetes service discovery error",
      "root_cause": "spring_cloud_kubernetes_error",
      "suggestion": "Check Kubernetes API server connectivity and permissions. Verify service account and RBAC configuration. Ensure proper namespace and label selector configuration. Check pod and service annotations.",
      "confidence": "high",
      "severity": "medium",
      "category": "spring_cloud",
      "framework": "spring"
    },
    {
      "id": "spring_cloud_openfeign_timeout",
      "pattern": "(?:java\\.net\\.SocketTimeoutException|feign\\.RetryableException)(?:.*?(?:timeout|feign|read.*?timed.*?out).*?)?",
      "type": "FeignTimeoutException",
      "description": "OpenFeign client request timeout",
      "root_cause": "spring_cloud_feign_timeout",
      "suggestion": "Increase feign client timeout configuration. Check target service response time and performance. Implement proper retry and circuit breaker patterns. Consider async processing for long-running operations.",
      "confidence": "high",
      "severity": "medium",
      "category": "spring_cloud",
      "framework": "spring"
    },
    {
      "id": "spring_cloud_loadbalancer_no_instances",
      "pattern": "org\\.springframework\\.cloud\\.loadbalancer\\.core\\.NoopServiceInstanceListSupplier(?:.*?(?:no.*?instances|load.*?balancer).*?)?",
      "type": "LoadBalancerException",
      "description": "No service instances available for load balancing",
      "root_cause": "spring_cloud_no_service_instances",
      "suggestion": "Check service registration and discovery configuration. Verify service instances are healthy and registered. Ensure proper service discovery client configuration. Review load balancer health checks.",
      "confidence": "high",
      "severity": "high",
      "category": "spring_cloud",
      "framework": "spring"
    },
    {
      "id": "spring_cloud_bootstrap_context_error",
      "pattern": "org\\.springframework\\.cloud\\.bootstrap\\.BootstrapApplicationListener(?:.*?(?:bootstrap|context).*?)?",
      "type": "BootstrapContextException",
      "description": "Bootstrap context initialization error",
      "root_cause": "spring_cloud_bootstrap_error",
      "suggestion": "Check bootstrap.yml/bootstrap.properties configuration. Verify bootstrap context dependencies and configurations. Ensure proper property source ordering. Review cloud configuration setup.",
      "confidence": "medium",
      "severity": "high",
      "category": "spring_cloud",
      "framework": "spring"
    },
    {
      "id": "spring_cloud_function_invocation_error",
      "pattern": "org\\.springframework\\.cloud\\.function\\.(?:context|core)(?:.*?(?:function|invocation).*?)?",
      "type": "CloudFunctionException",
      "description": "Spring Cloud Function invocation error",
      "root_cause": "spring_cloud_function_error",
      "suggestion": "Check function definition and registration. Verify function input/output types and serialization. Ensure proper function configuration and routing. Review function execution context and dependencies.",
      "confidence": "medium",
      "severity": "medium",
      "category": "spring_cloud",
      "framework": "spring"
    },
    {
      "id": "spring_cloud_task_execution_error",
      "pattern": "org\\.springframework\\.cloud\\.task\\.(?:repository|listener)(?:.*?(?:task|execution).*?)?",
      "type": "CloudTaskException",
      "description": "Spring Cloud Task execution error",
      "root_cause": "spring_cloud_task_error",
      "suggestion": "Check task configuration and dependencies. Verify task repository setup and database connectivity. Ensure proper task lifecycle management. Review task execution parameters and environment.",
      "confidence": "medium",
      "severity": "medium",
      "category": "spring_cloud",
      "framework": "spring"
    }
  ]
}