{
  "name": "Spring Spring Security Errors",
  "rules": [
    {
      "id": "spring_security_authentication_failed",
      "pattern": "org\\.springframework\\.security\\.authentication\\.(?:BadCredentialsException|AuthenticationCredentialsNotFoundException|InsufficientAuthenticationException)(?:.*?Bad credentials.*?|.*?An Authentication object was not found.*?|.*?Full authentication is required.*?)?",
      "type": "AuthenticationException",
      "description": "Authentication failed due to invalid credentials or missing authentication",
      "root_cause": "spring_security_authentication_failure",
      "suggestion": "Verify user credentials are correct. Check authentication provider configuration. Ensure authentication filters are properly configured. For API endpoints, check if authentication headers are present and valid.",
      "confidence": "high",
      "severity": "high",
      "category": "spring_security",
      "framework": "spring"
    },
    {
      "id": "spring_security_access_denied",
      "pattern": "org\\.springframework\\.security\\.access\\.AccessDeniedException(?:.*?Access is denied.*?)?",
      "type": "AccessDeniedException",
      "description": "Access denied due to insufficient permissions or roles",
      "root_cause": "spring_security_authorization_failure",
      "suggestion": "Check user roles and authorities. Verify method-level security annotations like @PreAuthorize or @Secured. Review security configuration for proper role-based access control. Ensure user has required permissions for the resource.",
      "confidence": "high",
      "severity": "high",
      "category": "spring_security",
      "framework": "spring"
    },
    {
      "id": "spring_security_csrf_token_mismatch",
      "pattern": "org\\.springframework\\.security\\.web\\.csrf\\.(?:InvalidCsrfTokenException|MissingCsrfTokenException)(?:.*?Invalid CSRF Token.*?|.*?Expected CSRF token not found.*?)?",
      "type": "CsrfException",
      "description": "CSRF token validation failed or token is missing",
      "root_cause": "spring_security_csrf_failure",
      "suggestion": "Include CSRF token in forms using ${_csrf.token}. For AJAX requests, send CSRF token in headers. Consider disabling CSRF for stateless APIs. Ensure CSRF token repository is properly configured.",
      "confidence": "high",
      "severity": "medium",
      "category": "spring_security",
      "framework": "spring"
    },
    {
      "id": "spring_security_session_expired",
      "pattern": "org\\.springframework\\.security\\.web\\.session\\.(?:SessionAuthenticationException|InvalidSessionException)(?:.*?Your session has expired.*?|.*?Invalid session.*?)?",
      "type": "SessionException",
      "description": "User session has expired or is invalid",
      "root_cause": "spring_security_session_failure",
      "suggestion": "Configure session timeout appropriately. Implement session management strategy. Handle session expiration gracefully in the UI. Consider using remember-me functionality for better user experience.",
      "confidence": "high",
      "severity": "medium",
      "category": "spring_security",
      "framework": "spring"
    },
    {
      "id": "spring_security_user_not_found",
      "pattern": "org\\.springframework\\.security\\.core\\.userdetails\\.UsernameNotFoundException(?:.*?User.*?not found.*?)?",
      "type": "UsernameNotFoundException",
      "description": "User account not found during authentication",
      "root_cause": "spring_security_user_not_found",
      "suggestion": "Check if user exists in the user store. Verify UserDetailsService implementation. Ensure proper user registration flow. Consider implementing user-friendly error messages without revealing system details.",
      "confidence": "high",
      "severity": "medium",
      "category": "spring_security",
      "framework": "spring"
    },
    {
      "id": "spring_security_account_locked",
      "pattern": "org\\.springframework\\.security\\.authentication\\.(?:LockedException|DisabledException|AccountExpiredException|CredentialsExpiredException)(?:.*?(?:locked|disabled|expired).*?)?",
      "type": "AccountStatusException",
      "description": "User account is locked, disabled, or expired",
      "root_cause": "spring_security_account_status",
      "suggestion": "Check account status in user store. Implement account unlock mechanism. Verify account expiration policies. Provide clear messaging to users about account status and recovery options.",
      "confidence": "high",
      "severity": "medium",
      "category": "spring_security",
      "framework": "spring"
    },
    {
      "id": "spring_security_jwt_expired",
      "pattern": "(?:io\\.jsonwebtoken\\.ExpiredJwtException|org\\.springframework\\.security\\.oauth2\\.jwt\\.JwtValidationException)(?:.*?JWT expired.*?|.*?token.*?expired.*?)?",
      "type": "JwtException",
      "description": "JWT token has expired",
      "root_cause": "spring_security_jwt_expired",
      "suggestion": "Implement token refresh mechanism. Check token expiration time configuration. Provide clear error handling for expired tokens. Consider implementing sliding session for better user experience.",
      "confidence": "high",
      "severity": "medium",
      "category": "spring_security",
      "framework": "spring"
    },
    {
      "id": "spring_security_jwt_malformed",
      "pattern": "(?:io\\.jsonwebtoken\\.MalformedJwtException|io\\.jsonwebtoken\\.SignatureException|org\\.springframework\\.security\\.oauth2\\.jwt\\.JwtDecodingException)(?:.*?(?:malformed|invalid|signature).*?)?",
      "type": "JwtException",
      "description": "JWT token is malformed or has invalid signature",
      "root_cause": "spring_security_jwt_invalid",
      "suggestion": "Verify JWT signing key configuration. Check token format and structure. Ensure consistent signing algorithm across services. Validate token encoding/decoding logic.",
      "confidence": "high",
      "severity": "high",
      "category": "spring_security",
      "framework": "spring"
    },
    {
      "id": "spring_security_oauth2_invalid_client",
      "pattern": "org\\.springframework\\.security\\.oauth2\\.core\\.OAuth2AuthenticationException(?:.*?(?:invalid_client|unauthorized_client).*?)?",
      "type": "OAuth2AuthenticationException",
      "description": "OAuth2 client authentication failed",
      "root_cause": "spring_security_oauth2_client_error",
      "suggestion": "Verify client ID and secret configuration. Check OAuth2 provider settings. Ensure client is registered with authorization server. Validate redirect URIs and scopes.",
      "confidence": "high",
      "severity": "high",
      "category": "spring_security",
      "framework": "spring"
    },
    {
      "id": "spring_security_oauth2_invalid_grant",
      "pattern": "org\\.springframework\\.security\\.oauth2\\.core\\.OAuth2AuthenticationException(?:.*?invalid_grant.*?)?",
      "type": "OAuth2AuthenticationException",
      "description": "OAuth2 authorization grant is invalid",
      "root_cause": "spring_security_oauth2_grant_error",
      "suggestion": "Check authorization code validity and expiration. Verify grant type configuration. Ensure proper OAuth2 flow implementation. Validate authorization server configuration.",
      "confidence": "high",
      "severity": "medium",
      "category": "spring_security",
      "framework": "spring"
    },
    {
      "id": "spring_security_method_security_disabled",
      "pattern": "java\\.lang\\.IllegalStateException(?:.*?Method security is not enabled.*?|.*?@EnableGlobalMethodSecurity.*?)",
      "type": "IllegalStateException",
      "description": "Method-level security is not enabled but security annotations are used",
      "root_cause": "spring_security_method_security_not_enabled",
      "suggestion": "Add @EnableGlobalMethodSecurity(prePostEnabled = true) to your security configuration. Ensure security configuration is properly imported. Check if method security is conditionally disabled.",
      "confidence": "high",
      "severity": "medium",
      "category": "spring_security",
      "framework": "spring"
    },
    {
      "id": "spring_security_password_encoder_mismatch",
      "pattern": "org\\.springframework\\.security\\.crypto\\.password\\.(?:BadCredentialsException|IllegalArgumentException)(?:.*?(?:password.*?encoded|encoding.*?mismatch).*?)?",
      "type": "PasswordEncodingException",
      "description": "Password encoding mismatch or invalid encoder configuration",
      "root_cause": "spring_security_password_encoding_error",
      "suggestion": "Ensure consistent password encoder across authentication and user creation. Use DelegatingPasswordEncoder for multiple encoding support. Verify password encoding configuration in security config.",
      "confidence": "high",
      "severity": "medium",
      "category": "spring_security",
      "framework": "spring"
    },
    {
      "id": "spring_security_remember_me_failure",
      "pattern": "org\\.springframework\\.security\\.web\\.authentication\\.rememberme\\.(?:InvalidCookieException|CookieTheftException)(?:.*?remember.*?me.*?)?",
      "type": "RememberMeException",
      "description": "Remember-me authentication failed",
      "root_cause": "spring_security_remember_me_error",
      "suggestion": "Check remember-me token store configuration. Verify cookie security settings. Ensure proper key configuration for token generation. Consider token repository cleanup policies.",
      "confidence": "high",
      "severity": "low",
      "category": "spring_security",
      "framework": "spring"
    },
    {
      "id": "spring_security_concurrent_session_exceeded",
      "pattern": "org\\.springframework\\.security\\.web\\.session\\.SessionAuthenticationException(?:.*?Maximum sessions.*?exceeded.*?)?",
      "type": "ConcurrentSessionException",
      "description": "Maximum number of concurrent sessions exceeded",
      "root_cause": "spring_security_concurrent_session_limit",
      "suggestion": "Configure session concurrency control appropriately. Implement session registry cleanup. Consider user experience for session limits. Review maximum sessions per user settings.",
      "confidence": "high",
      "severity": "low",
      "category": "spring_security",
      "framework": "spring"
    },
    {
      "id": "spring_security_filter_chain_misconfiguration",
      "pattern": "org\\.springframework\\.beans\\.factory\\.BeanCreationException(?:.*?SecurityFilterChain.*?|.*?WebSecurityConfigurerAdapter.*?)",
      "type": "SecurityConfigurationException",
      "description": "Security filter chain configuration error",
      "root_cause": "spring_security_filter_chain_error",
      "suggestion": "Review security configuration class. Ensure proper SecurityFilterChain bean definition. Check for conflicting security configurations. Verify filter ordering and dependencies.",
      "confidence": "medium",
      "severity": "high",
      "category": "spring_security",
      "framework": "spring"
    },
    {
      "id": "spring_security_cors_configuration_error",
      "pattern": "org\\.springframework\\.web\\.cors\\.CorsConfigurationSource(?:.*?CORS.*?|.*?Cross-Origin.*?)",
      "type": "CorsConfigurationException",
      "description": "CORS configuration error in Spring Security",
      "root_cause": "spring_security_cors_error",
      "suggestion": "Configure CORS properly in security configuration. Use @CrossOrigin annotations or global CORS configuration. Ensure allowed origins, methods, and headers are correctly specified.",
      "confidence": "medium",
      "severity": "medium",
      "category": "spring_security",
      "framework": "spring"
    },
    {
      "id": "spring_security_ldap_authentication_error",
      "pattern": "org\\.springframework\\.ldap\\.(?:AuthenticationException|CommunicationException)(?:.*?LDAP.*?)?",
      "type": "LdapAuthenticationException",
      "description": "LDAP authentication failed",
      "root_cause": "spring_security_ldap_error",
      "suggestion": "Verify LDAP server connection settings. Check LDAP bind credentials and search base configuration. Ensure proper LDAP attribute mapping. Test LDAP connectivity independently.",
      "confidence": "high",
      "severity": "medium",
      "category": "spring_security",
      "framework": "spring"
    },
    {
      "id": "spring_security_saml_authentication_error",
      "pattern": "org\\.springframework\\.security\\.saml\\.(?:SAMLException|SAMLAuthenticationException)(?:.*?SAML.*?)?",
      "type": "SAMLAuthenticationException",
      "description": "SAML authentication failed",
      "root_cause": "spring_security_saml_error",
      "suggestion": "Verify SAML IdP configuration and metadata. Check certificate validity and signing configuration. Ensure proper SAML assertion validation. Review SAML binding and profile settings.",
      "confidence": "high",
      "severity": "medium",
      "category": "spring_security",
      "framework": "spring"
    },
    {
      "id": "spring_security_preauthorize_expression_error",
      "pattern": "org\\.springframework\\.expression\\.(?:EvaluationException|ParseException)(?:.*?@PreAuthorize.*?|.*?security expression.*?)?",
      "type": "SecurityExpressionException",
      "description": "Error in security expression evaluation",
      "root_cause": "spring_security_expression_error",
      "suggestion": "Check syntax of security expressions in @PreAuthorize/@PostAuthorize. Verify method parameters and return values used in expressions. Ensure proper SpEL syntax and available security context.",
      "confidence": "high",
      "severity": "medium",
      "category": "spring_security",
      "framework": "spring"
    },
    {
      "id": "spring_security_role_hierarchy_error",
      "pattern": "org\\.springframework\\.security\\.access\\.hierarchicalroles\\.RoleHierarchyImpl(?:.*?role.*?hierarchy.*?)?",
      "type": "RoleHierarchyException",
      "description": "Role hierarchy configuration error",
      "root_cause": "spring_security_role_hierarchy_error",
      "suggestion": "Check role hierarchy configuration syntax. Ensure proper role naming convention. Verify role hierarchy bean configuration. Test role inheritance logic.",
      "confidence": "medium",
      "severity": "low",
      "category": "spring_security",
      "framework": "spring"
    }
  ]
}