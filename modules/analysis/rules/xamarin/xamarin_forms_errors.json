{
  "name": "Xamarin.Forms Errors",
  "description": "Rules for detecting Xamarin.Forms specific UI and layout errors",
  "version": "1.0.0",
  "rules": [
    {
      "id": "xamarin_forms_layout_cycle",
      "pattern": ".*layout.*cycle.*detected.*forms.*|.*infinite.*layout.*xamarin.*forms.*",
      "type": "System.InvalidOperationException",
      "description": "Infinite layout cycle detected in Xamarin.Forms layout",
      "root_cause": "xamarin_forms_layout_cycle",
      "suggestion": "Check for circular layout dependencies. Avoid setting layout properties that cause recursive layout updates. Use fixed sizes or proper constraints.",
      "confidence": "high",
      "severity": "high",
      "category": "layout",
      "framework": "xamarin-forms"
    },
    {
      "id": "xamarin_forms_listview_uneven_rows_performance",
      "pattern": ".*ListView.*uneven.*rows.*performance.*|.*HasUnevenRows.*performance.*warning.*",
      "type": "PerformanceWarning",
      "description": "ListView with HasUnevenRows causing performance issues",
      "root_cause": "xamarin_forms_listview_uneven_rows_performance",
      "suggestion": "Avoid HasUnevenRows=true when possible. Use CollectionView instead of ListView for better performance with dynamic sizing. Pre-calculate row heights if needed.",
      "confidence": "medium",
      "severity": "medium",
      "category": "performance",
      "framework": "xamarin-forms"
    },
    {
      "id": "xamarin_forms_image_source_not_found",
      "pattern": ".*Image.*source.*not.*found.*forms.*|.*ImageSource.*failed.*to.*load.*",
      "type": "System.IO.FileNotFoundException",
      "description": "Xamarin.Forms Image source file not found",
      "root_cause": "xamarin_forms_image_source_not_found",
      "suggestion": "Verify image files exist in platform-specific folders. Use ImageSource.FromResource for embedded resources or ImageSource.FromUri for web images with proper error handling.",
      "confidence": "high",
      "severity": "medium",
      "category": "resources",
      "framework": "xamarin-forms"
    },
    {
      "id": "xamarin_forms_binding_path_not_found",
      "pattern": ".*binding.*path.*not.*found.*forms.*|.*property.*.*not.*found.*binding.*",
      "type": "BindingException",
      "description": "Xamarin.Forms binding path property not found",
      "root_cause": "xamarin_forms_binding_path_not_found",
      "suggestion": "Verify property names in binding expressions match exactly. Ensure BindingContext implements INotifyPropertyChanged. Check for typos in XAML binding paths.",
      "confidence": "medium",
      "severity": "medium",
      "category": "databinding",
      "framework": "xamarin-forms"
    },
    {
      "id": "xamarin_forms_converter_null_value",
      "pattern": ".*value.*converter.*null.*forms.*|.*IValueConverter.*null.*reference.*",
      "type": "System.NullReferenceException",
      "description": "Value converter received null value without proper handling",
      "root_cause": "xamarin_forms_converter_null_value",
      "suggestion": "Handle null values in IValueConverter implementations. Use ConverterParameter for default values or implement null checks in Convert/ConvertBack methods.",
      "confidence": "medium",
      "severity": "medium",
      "category": "databinding",
      "framework": "xamarin-forms"
    },
    {
      "id": "xamarin_forms_grid_column_row_out_of_bounds",
      "pattern": ".*Grid.*column.*row.*out.*of.*bounds.*|.*Grid.*index.*exceeds.*definition.*",
      "type": "System.ArgumentOutOfRangeException",
      "description": "Grid column or row index exceeds defined dimensions",
      "root_cause": "xamarin_forms_grid_column_row_out_of_bounds",
      "suggestion": "Ensure Grid.Column and Grid.Row values are within ColumnDefinitions and RowDefinitions bounds. Define appropriate grid structure before adding children.",
      "confidence": "high",
      "severity": "medium",
      "category": "layout",
      "framework": "xamarin-forms"
    },
    {
      "id": "xamarin_forms_stacklayout_overflow",
      "pattern": ".*StackLayout.*overflow.*|.*StackLayout.*infinite.*height.*width.*",
      "type": "LayoutException",
      "description": "StackLayout content overflowing available space",
      "root_cause": "xamarin_forms_stacklayout_overflow",
      "suggestion": "Use ScrollView to wrap StackLayout for scrollable content. Set appropriate VerticalOptions/HorizontalOptions. Consider using Grid or FlexLayout for complex layouts.",
      "confidence": "medium",
      "severity": "medium",
      "category": "layout",
      "framework": "xamarin-forms"
    },
    {
      "id": "xamarin_forms_carousel_view_item_template_missing",
      "pattern": ".*CarouselView.*ItemTemplate.*missing.*|.*CarouselView.*no.*template.*defined.*",
      "type": "System.InvalidOperationException",
      "description": "CarouselView used without ItemTemplate",
      "root_cause": "xamarin_forms_carousel_view_item_template_missing",
      "suggestion": "Define ItemTemplate for CarouselView to specify how each item should be displayed. Use DataTemplate with appropriate view structure.",
      "confidence": "high",
      "severity": "medium",
      "category": "controls",
      "framework": "xamarin-forms"
    },
    {
      "id": "xamarin_forms_webview_navigation_error",
      "pattern": ".*WebView.*navigation.*error.*forms.*|.*WebView.*failed.*to.*load.*url.*",
      "type": "WebNavigationException",
      "description": "WebView navigation error",
      "root_cause": "xamarin_forms_webview_navigation_error",
      "suggestion": "Handle WebView navigation events (Navigating/Navigated) for error handling. Check URL validity and network connectivity. Implement fallback content for navigation failures.",
      "confidence": "medium",
      "severity": "medium",
      "category": "controls",
      "framework": "xamarin-forms"
    },
    {
      "id": "xamarin_forms_entry_focus_keyboard_issue",
      "pattern": ".*Entry.*focus.*keyboard.*issue.*|.*soft.*keyboard.*entry.*forms.*",
      "type": "FocusException",
      "description": "Entry focus or soft keyboard display issues",
      "root_cause": "xamarin_forms_entry_focus_keyboard_issue",
      "suggestion": "Handle Entry focus events properly. Use appropriate keyboard types via Keyboard property. Ensure proper layout adjustment for soft keyboard appearance.",
      "confidence": "medium",
      "severity": "low",
      "category": "controls",
      "framework": "xamarin-forms"
    },
    {
      "id": "xamarin_forms_button_command_null",
      "pattern": ".*Button.*Command.*null.*forms.*|.*button.*command.*binding.*failed.*",
      "type": "System.NullReferenceException",
      "description": "Button Command property is null when accessed",
      "root_cause": "xamarin_forms_button_command_null",
      "suggestion": "Ensure Command property is properly bound to ICommand implementation. Verify BindingContext contains command property. Use Command pattern with proper CanExecute logic.",
      "confidence": "medium",
      "severity": "medium",
      "category": "databinding",
      "framework": "xamarin-forms"
    },
    {
      "id": "xamarin_forms_page_padding_safe_area",
      "pattern": ".*page.*padding.*safe.*area.*forms.*|.*notch.*safe.*area.*layout.*",
      "type": "LayoutException",
      "description": "Page content not respecting safe area padding",
      "root_cause": "xamarin_forms_page_padding_safe_area",
      "suggestion": "Use On<iOS>().SetUseSafeArea(true) for iOS safe area handling. Apply appropriate Padding to avoid notch and status bar overlap.",
      "confidence": "medium",
      "severity": "low",
      "category": "layout",
      "framework": "xamarin-forms"
    },
    {
      "id": "xamarin_forms_tabbed_page_children_missing",
      "pattern": ".*TabbedPage.*children.*missing.*|.*TabbedPage.*no.*tabs.*defined.*",
      "type": "System.InvalidOperationException",
      "description": "TabbedPage without child pages defined",
      "root_cause": "xamarin_forms_tabbed_page_children_missing",
      "suggestion": "Add child pages to TabbedPage.Children collection. Each tab requires a Page instance with appropriate Title and Icon properties.",
      "confidence": "high",
      "severity": "medium",
      "category": "navigation",
      "framework": "xamarin-forms"
    },
    {
      "id": "xamarin_forms_master_detail_deprecated",
      "pattern": ".*MasterDetailPage.*deprecated.*|.*MasterDetailPage.*obsolete.*forms.*",
      "type": "DeprecationWarning",
      "description": "MasterDetailPage is deprecated in Xamarin.Forms",
      "root_cause": "xamarin_forms_master_detail_deprecated",
      "suggestion": "Replace MasterDetailPage with FlyoutPage which provides the same functionality with improved API. Update XAML and code-behind accordingly.",
      "confidence": "high",
      "severity": "low",
      "category": "deprecation",
      "framework": "xamarin-forms"
    },
    {
      "id": "xamarin_forms_searchbar_text_changed_performance",
      "pattern": ".*SearchBar.*TextChanged.*performance.*|.*search.*text.*changed.*excessive.*calls.*",
      "type": "PerformanceWarning",
      "description": "SearchBar TextChanged event firing too frequently",
      "root_cause": "xamarin_forms_searchbar_text_changed_performance",
      "suggestion": "Implement debouncing for SearchBar TextChanged events. Use async/await with CancellationToken to prevent overlapping search operations.",
      "confidence": "medium",
      "severity": "medium",
      "category": "performance",
      "framework": "xamarin-forms"
    },
    {
      "id": "xamarin_forms_refresh_view_command_error",
      "pattern": ".*RefreshView.*command.*error.*|.*RefreshView.*refresh.*failed.*forms.*",
      "type": "System.InvalidOperationException",
      "description": "RefreshView refresh command execution error",
      "root_cause": "xamarin_forms_refresh_view_command_error",
      "suggestion": "Ensure RefreshCommand is properly implemented with async operations. Set IsRefreshing to false after completion. Handle exceptions in refresh logic gracefully.",
      "confidence": "medium",
      "severity": "medium",
      "category": "controls",
      "framework": "xamarin-forms"
    },
    {
      "id": "xamarin_forms_collection_view_scroll_performance",
      "pattern": ".*CollectionView.*scroll.*performance.*|.*collection.*view.*lag.*scrolling.*",
      "type": "PerformanceWarning",
      "description": "CollectionView scrolling performance issues",
      "root_cause": "xamarin_forms_collection_view_scroll_performance",
      "suggestion": "Optimize CollectionView ItemTemplate complexity. Use proper virtualization, avoid complex layouts in templates. Implement data virtualization for large datasets.",
      "confidence": "medium",
      "severity": "medium",
      "category": "performance",
      "framework": "xamarin-forms"
    },
    {
      "id": "xamarin_forms_visual_state_manager_error",
      "pattern": ".*VisualStateManager.*state.*not.*found.*|.*visual.*state.*transition.*failed.*",
      "type": "System.ArgumentException",
      "description": "Visual state not found or transition failed",
      "root_cause": "xamarin_forms_visual_state_manager_error",
      "suggestion": "Verify visual state names match exactly in VisualStateManager.GoToState calls. Ensure visual states are properly defined in XAML or code.",
      "confidence": "medium",
      "severity": "low",
      "category": "visual",
      "framework": "xamarin-forms"
    },
    {
      "id": "xamarin_forms_shell_flyout_behavior_error",
      "pattern": ".*Shell.*flyout.*behavior.*error.*|.*FlyoutBehavior.*invalid.*configuration.*",
      "type": "System.InvalidOperationException",
      "description": "Shell flyout behavior configuration error",
      "root_cause": "xamarin_forms_shell_flyout_behavior_error",
      "suggestion": "Configure Shell.FlyoutBehavior appropriately (Flyout, Locked, Disabled). Ensure proper navigation hierarchy and flyout items are defined.",
      "confidence": "medium",
      "severity": "medium",
      "category": "navigation",
      "framework": "xamarin-forms"
    },
    {
      "id": "xamarin_forms_styles_resource_not_found",
      "pattern": ".*style.*resource.*not.*found.*forms.*|.*StaticResource.*style.*missing.*",
      "type": "XamlParseException",
      "description": "Style resource not found in ResourceDictionary",
      "root_cause": "xamarin_forms_styles_resource_not_found",
      "suggestion": "Ensure style resources are defined in appropriate ResourceDictionary. Check resource key names match exactly. Verify resource scope (Application, Page, or Control level).",
      "confidence": "high",
      "severity": "medium",
      "category": "styling",
      "framework": "xamarin-forms"
    }
  ]
}