{
  "name": "Nim Type System Errors",
  "description": "Rules for detecting Nim type system and type checking errors",
  "rules": [
    {
      "id": "nim_type_mismatch_general",
      "pattern": "Error: type mismatch: got (.+) but expected (.+)",
      "type": "TypeError",
      "description": "Type mismatch between actual and expected types",
      "root_cause": "nim_type_error",
      "suggestion": "Ensure types match or add appropriate type conversion",
      "category": "nim",
      "severity": "high",
      "confidence": "high",
      "tags": [
        "nim",
        "type",
        "mismatch"
      ],
      "examples": [
        "Error: type mismatch: got int but expected string",
        "Error: type mismatch: got seq[int] but expected array[0..10, int]"
      ],
      "metadata": {},
      "criticality": "medium",
      "complexity": "moderate",
      "reliability": "high",
      "source": "built_in",
      "rule_type": "error_detection",
      "dependencies": []
    },
    {
      "id": "nim_type_conversion_error",
      "pattern": "Error: cannot convert (.+) to (.+)",
      "type": "TypeError",
      "description": "Cannot convert between incompatible types",
      "root_cause": "nim_type_error",
      "suggestion": "Use appropriate type conversion functions",
      "category": "nim",
      "severity": "high",
      "confidence": "high",
      "tags": [
        "nim",
        "type",
        "conversion"
      ],
      "examples": [
        "Error: cannot convert float to seq[int]",
        "Error: cannot convert string to bool"
      ],
      "metadata": {},
      "criticality": "medium",
      "complexity": "moderate",
      "reliability": "high",
      "source": "built_in",
      "rule_type": "error_detection",
      "dependencies": []
    },
    {
      "id": "nim_type_no_constructor",
      "pattern": "Error: type '(.+)' doesn't have a correct constructor",
      "type": "TypeError",
      "description": "Type doesn't have a constructor for initialization",
      "root_cause": "nim_type_error",
      "suggestion": "Define appropriate constructor or use initialization syntax",
      "category": "nim",
      "severity": "high",
      "confidence": "high",
      "tags": [
        "nim",
        "type",
        "constructor"
      ],
      "examples": [
        "Error: type 'CustomType' doesn't have a correct constructor"
      ],
      "metadata": {},
      "criticality": "medium",
      "complexity": "high",
      "reliability": "high",
      "source": "built_in",
      "rule_type": "error_detection",
      "dependencies": []
    },
    {
      "id": "nim_type_no_member",
      "pattern": "Error: type '(.+)' has no member named '(.+)'",
      "type": "TypeError",
      "description": "Accessing non-existent member of a type",
      "root_cause": "nim_type_error",
      "suggestion": "Check type definition for available members",
      "category": "nim",
      "severity": "high",
      "confidence": "high",
      "tags": [
        "nim",
        "type",
        "member"
      ],
      "examples": [
        "Error: type 'Person' has no member named 'age'",
        "Error: type 'File' has no member named 'size'"
      ],
      "metadata": {},
      "criticality": "medium",
      "complexity": "moderate",
      "reliability": "high",
      "source": "built_in",
      "rule_type": "error_detection",
      "dependencies": []
    },
    {
      "id": "nim_type_invalid_context",
      "pattern": "Error: invalid type '(.+)' in this context",
      "type": "TypeError",
      "description": "Using a type in an invalid context",
      "root_cause": "nim_type_error",
      "suggestion": "Check if the type can be used in this context",
      "category": "nim",
      "severity": "high",
      "confidence": "high",
      "tags": [
        "nim",
        "type",
        "context"
      ],
      "examples": [
        "Error: invalid type 'void' in this context",
        "Error: invalid type 'typedesc' in this context"
      ],
      "metadata": {},
      "criticality": "medium",
      "complexity": "high",
      "reliability": "high",
      "source": "built_in",
      "rule_type": "error_detection",
      "dependencies": []
    },
    {
      "id": "nim_type_not_instantiated",
      "pattern": "Error: type '(.+)' cannot be instantiated",
      "type": "TypeError",
      "description": "Cannot instantiate the type",
      "root_cause": "nim_type_error",
      "suggestion": "Check if type is abstract or incomplete",
      "category": "nim",
      "severity": "high",
      "confidence": "high",
      "tags": [
        "nim",
        "type",
        "instantiation"
      ],
      "examples": [
        "Error: type 'Protocol' cannot be instantiated",
        "Error: type 'Interface' cannot be instantiated"
      ],
      "metadata": {},
      "criticality": "medium",
      "complexity": "high",
      "reliability": "high",
      "source": "built_in",
      "rule_type": "error_detection",
      "dependencies": []
    },
    {
      "id": "nim_type_generic_mismatch",
      "pattern": "Error: generic type instantiation too nested",
      "type": "TypeError",
      "description": "Generic type instantiation is too deeply nested",
      "root_cause": "nim_type_error",
      "suggestion": "Simplify generic type hierarchy",
      "category": "nim",
      "severity": "high",
      "confidence": "high",
      "tags": [
        "nim",
        "type",
        "generic"
      ],
      "examples": [
        "Error: generic type instantiation too nested"
      ],
      "metadata": {},
      "criticality": "medium",
      "complexity": "high",
      "reliability": "high",
      "source": "built_in",
      "rule_type": "error_detection",
      "dependencies": []
    },
    {
      "id": "nim_type_option_error",
      "pattern": "Error: unhandled exception: (.*Option.*)",
      "type": "TypeError",
      "description": "Unhandled Option type error",
      "root_cause": "nim_option_error",
      "suggestion": "Check if Option has a value before unwrapping",
      "category": "nim",
      "severity": "high",
      "confidence": "high",
      "tags": [
        "nim",
        "type",
        "option",
        "safety"
      ],
      "examples": [
        "Error: unhandled exception: UnpackDefect: Option is none",
        "Error: unhandled exception: tried to get value of none"
      ],
      "metadata": {},
      "criticality": "high",
      "complexity": "moderate",
      "reliability": "high",
      "source": "built_in",
      "rule_type": "error_detection",
      "dependencies": []
    }
  ],
    {
      "id": "nim_type_generic_constraint",
      "pattern": "Error: cannot instantiate: '(.+)'.*?not derived from required super type",
      "type": "TypeError",
      "description": "Type doesn't satisfy generic type constraint",
      "root_cause": "nim_type_error",
      "suggestion": "Ensure type satisfies all constraints of the generic type parameter",
      "category": "nim",
      "severity": "high",
      "confidence": "high",
      "tags": [
        "nim",
        "type",
        "generic",
        "constraint"
      ],
      "examples": [
        "Error: cannot instantiate: 'CustomType' is not derived from required super type 'Printable'"
      ],
      "metadata": {},
      "criticality": "medium",
      "complexity": "high",
      "reliability": "high",
      "source": "built_in",
      "rule_type": "error_detection",
      "dependencies": []
    },
    {
      "id": "nim_type_concept_constraint",
      "pattern": "Error: type '(.+)' has no member '(.+)' to satisfy concept",
      "type": "TypeError",
      "description": "Type doesn't implement required interface/concept",
      "root_cause": "nim_type_error",
      "suggestion": "Implement required methods for the concept",
      "category": "nim",
      "severity": "high",
      "confidence": "high",
      "tags": [
        "nim",
        "type",
        "concept",
        "interface"
      ],
      "examples": [
        "Error: type 'User' has no member 'serialize' to satisfy concept"
      ],
      "metadata": {},
      "criticality": "medium",
      "complexity": "high",
      "reliability": "high",
      "source": "built_in",
      "rule_type": "error_detection",
      "dependencies": []
    },
    {
      "id": "nim_type_distinct_operation",
      "pattern": "Error: no (.*?) operator defined for types: (.+)",
      "type": "TypeError",
      "description": "Missing operator for distinct type",
      "root_cause": "nim_type_error",
      "suggestion": "Define required operators for distinct types",
      "category": "nim",
      "severity": "high",
      "confidence": "high",
      "tags": [
        "nim",
        "type",
        "distinct",
        "operator"
      ],
      "examples": [
        "Error: no + operator defined for types: Meters and Meters"
      ],
      "metadata": {},
      "criticality": "medium",
      "complexity": "moderate",
      "reliability": "high",
      "source": "built_in",
      "rule_type": "error_detection",
      "dependencies": []
    },
    {
      "id": "nim_type_recursive_definition",
      "pattern": "Error: illegal recursion in type '(.+)'",
      "type": "TypeError",
      "description": "Illegal recursive type definition",
      "root_cause": "nim_type_error",
      "suggestion": "Use ref object for recursive type definitions",
      "category": "nim",
      "severity": "high",
      "confidence": "high",
      "tags": [
        "nim",
        "type",
        "recursive",
        "definition"
      ],
      "examples": [
        "Error: illegal recursion in type 'LinkedList'"
      ],
      "metadata": {},
      "criticality": "medium",
      "complexity": "high",
      "reliability": "high",
      "source": "built_in",
      "rule_type": "error_detection",
      "dependencies": []
    },
    {
      "id": "nim_type_variant_case",
      "pattern": "Error: unhandled case in variant",
      "type": "TypeError",
      "description": "Unhandled case in variant object",
      "root_cause": "nim_type_error",
      "suggestion": "Add missing case branches for variant object",
      "category": "nim",
      "severity": "high",
      "confidence": "high",
      "tags": [
        "nim",
        "type",
        "variant",
        "case"
      ],
      "examples": [
        "Error: unhandled case in variant"
      ],
      "metadata": {},
      "criticality": "medium",
      "complexity": "moderate",
      "reliability": "high",
      "source": "built_in",
      "rule_type": "error_detection",
      "dependencies": []
    },
    {
      "id": "nim_type_sealed_inheritance",
      "pattern": "Error: inheritance only works with non-final objects",
      "type": "TypeError",
      "description": "Attempting to inherit from a final/sealed object type",
      "root_cause": "nim_type_error",
      "suggestion": "Remove {.final.} pragma or inherit from a non-final object",
      "category": "nim",
      "severity": "high",
      "confidence": "high",
      "tags": [
        "nim",
        "type",
        "inheritance",
        "final"
      ],
      "examples": [
        "Error: inheritance only works with non-final objects"
      ],
      "metadata": {},
      "criticality": "medium",
      "complexity": "moderate",
      "reliability": "high",
      "source": "built_in",
      "rule_type": "error_detection",
      "dependencies": []
    },
    {
      "id": "nim_type_result_error",
      "pattern": "Error: unhandled exception: (.*Result.*)",
      "type": "TypeError",
      "description": "Unhandled Result type error",
      "root_cause": "nim_result_error",
      "suggestion": "Check if Result is ok before accessing value",
      "category": "nim",
      "severity": "high",
      "confidence": "high",
      "tags": [
        "nim",
        "type",
        "result",
        "safety"
      ],
      "examples": [
        "Error: unhandled exception: UnpackDefect: Result contains an error"
      ],
      "metadata": {},
      "criticality": "high",
      "complexity": "moderate",
      "reliability": "high",
      "source": "built_in",
      "rule_type": "error_detection",
      "dependencies": []
    }
  ]
}