{
  "description": "Android-specific Kotlin errors and lifecycle issues",
  "version": "1.0.0",
  "rules": [
    {
      "id": "kotlin_activity_not_found",
      "pattern": "android\\.content\\.ActivityNotFoundException.*",
      "error_type": "ActivityNotFoundException",
      "description": "No activity found to handle the given intent",
      "root_cause": "kotlin_activity_not_found",
      "suggestion": "Verify intent action/data and ensure target activity is declared in AndroidManifest.xml with proper intent filters",
      "confidence": "high",
      "severity": "high",
      "category": "android",
      "framework": "android"
    },
    {
      "id": "kotlin_view_not_found",
      "pattern": ".*findViewById.*returned null.*|.*view.*with id.*not found.*",
      "error_type": "NullPointerException",
      "description": "View with specified ID not found in layout",
      "root_cause": "kotlin_view_not_found",
      "suggestion": "Verify view ID exists in current layout file and use findViewById with proper type casting or view binding",
      "confidence": "high",
      "severity": "medium",
      "category": "android",
      "framework": "android"
    },
    {
      "id": "kotlin_fragment_not_attached",
      "pattern": ".*Fragment.*not attached.*|.*requireContext.*called.*detached.*",
      "error_type": "IllegalStateException",
      "description": "Fragment method called when not attached to activity",
      "root_cause": "kotlin_fragment_not_attached",
      "suggestion": "Check isAdded before accessing context/activity, or use requireContext() only when fragment is guaranteed to be attached",
      "confidence": "high",
      "severity": "medium",
      "category": "android",
      "framework": "android"
    },
    {
      "id": "kotlin_context_null",
      "pattern": ".*context.*null.*|.*getContext.*returned null.*",
      "error_type": "NullPointerException",
      "description": "Context is null when accessed",
      "root_cause": "kotlin_context_null",
      "suggestion": "Store application context for long-lived objects or check context availability before use",
      "confidence": "medium",
      "severity": "medium",
      "category": "android",
      "framework": "android"
    },
    {
      "id": "kotlin_activity_leaked",
      "pattern": ".*activity.*leaked.*|.*memory leak.*activity.*",
      "error_type": "MemoryLeak",
      "description": "Activity context held after destruction causing memory leak",
      "root_cause": "kotlin_memory_leak",
      "suggestion": "Use weak references for activity context in long-lived objects, or use application context when possible",
      "confidence": "medium",
      "severity": "high",
      "category": "android",
      "framework": "android"
    },
    {
      "id": "kotlin_main_thread_network",
      "pattern": ".*NetworkOnMainThreadException.*|.*main thread.*network.*",
      "error_type": "NetworkOnMainThreadException",
      "description": "Network operation attempted on main UI thread",
      "root_cause": "kotlin_main_thread_network",
      "suggestion": "Perform network operations in background thread using coroutines, AsyncTask (deprecated), or ExecutorService",
      "confidence": "high",
      "severity": "high",
      "category": "android",
      "framework": "android"
    },
    {
      "id": "kotlin_wrong_thread_ui",
      "pattern": ".*CalledFromWrongThreadException.*|.*UI.*wrong thread.*",
      "error_type": "CalledFromWrongThreadException",
      "description": "UI operation attempted from background thread",
      "root_cause": "kotlin_wrong_thread_ui",
      "suggestion": "Update UI on main thread using runOnUiThread, Handler.post, or coroutines with Dispatchers.Main",
      "confidence": "high",
      "severity": "high",
      "category": "android",
      "framework": "android"
    },
    {
      "id": "kotlin_recyclerview_no_adapter",
      "pattern": ".*RecyclerView.*no adapter.*|.*adapter.*not set.*recyclerview.*",
      "error_type": "IllegalStateException",
      "description": "RecyclerView used without setting adapter",
      "root_cause": "kotlin_recyclerview_no_adapter",
      "suggestion": "Set adapter on RecyclerView before use: recyclerView.adapter = yourAdapter",
      "confidence": "high",
      "severity": "medium",
      "category": "android",
      "framework": "android"
    },
    {
      "id": "kotlin_permission_denied",
      "pattern": ".*Permission.*denied.*|.*SecurityException.*permission.*",
      "error_type": "SecurityException",
      "description": "Required permission not granted",
      "root_cause": "kotlin_permission_denied",
      "suggestion": "Request runtime permissions using ActivityCompat.requestPermissions() for API 23+ or declare in manifest",
      "confidence": "high",
      "severity": "high",
      "category": "android",
      "framework": "android"
    },
    {
      "id": "kotlin_windowmanager_badtoken",
      "pattern": ".*WindowManager.*BadTokenException.*|.*window.*token.*invalid.*",
      "error_type": "BadTokenException",
      "description": "Attempted to show dialog/popup with invalid window token",
      "root_cause": "kotlin_window_bad_token",
      "suggestion": "Ensure activity is active and not finishing before showing dialogs, check isFinishing() before display",
      "confidence": "high",
      "severity": "medium",
      "category": "android",
      "framework": "android"
    },
    {
      "id": "kotlin_service_not_found",
      "pattern": ".*service.*not found.*|.*ServiceConnectionException.*",
      "error_type": "ServiceConnectionException",
      "description": "Service not found or unable to connect",
      "root_cause": "kotlin_service_not_found",
      "suggestion": "Verify service is declared in manifest and running, check service lifecycle and binding",
      "confidence": "medium",
      "severity": "medium",
      "category": "android",
      "framework": "android"
    },
    {
      "id": "kotlin_broadcast_receiver_leak",
      "pattern": ".*BroadcastReceiver.*leak.*|.*receiver.*not unregistered.*",
      "error_type": "MemoryLeak",
      "description": "BroadcastReceiver not unregistered causing memory leak",
      "root_cause": "kotlin_receiver_leak",
      "suggestion": "Unregister BroadcastReceiver in onPause/onDestroy using unregisterReceiver()",
      "confidence": "medium",
      "severity": "medium",
      "category": "android",
      "framework": "android"
    },
    {
      "id": "kotlin_intent_extra_null",
      "pattern": ".*intent.*extra.*null.*|.*getStringExtra.*null.*",
      "error_type": "NullPointerException",
      "description": "Intent extra is null when accessed",
      "root_cause": "kotlin_intent_extra_null",
      "suggestion": "Check for extra existence with hasExtra() or use default values with intent.getStringExtra() ?: defaultValue",
      "confidence": "medium",
      "severity": "medium",
      "category": "android",
      "framework": "android"
    },
    {
      "id": "kotlin_bundle_key_not_found",
      "pattern": ".*bundle.*key.*not found.*|.*Bundle.*missing.*",
      "error_type": "NullPointerException",
      "description": "Bundle key not found or Bundle is null",
      "root_cause": "kotlin_bundle_key_missing",
      "suggestion": "Check Bundle nullability and key existence: bundle?.getString(key) ?: defaultValue",
      "confidence": "medium",
      "severity": "medium",
      "category": "android",
      "framework": "android"
    },
    {
      "id": "kotlin_cursor_not_closed",
      "pattern": ".*cursor.*not closed.*|.*Cursor.*leak.*",
      "error_type": "ResourceLeak",
      "description": "Database cursor not properly closed",
      "root_cause": "kotlin_cursor_leak",
      "suggestion": "Always close cursors in finally block or use try-with-resources, prefer modern Room database",
      "confidence": "medium",
      "severity": "medium",
      "category": "android",
      "framework": "android"
    }
  ]
}