{
  "description": "Kotlin Multiplatform-specific errors and platform compatibility issues",
  "version": "1.0.0",
  "rules": [
    {
      "id": "kotlin_expect_actual_mismatch",
      "pattern": ".*expect.*actual.*mismatch.*|.*platform.*implementation.*missing.*",
      "error_type": "ExpectActualMismatch",
      "description": "Expected declaration does not have corresponding actual implementation",
      "root_cause": "kotlin_expect_actual_mismatch",
      "suggestion": "Provide actual implementations for all expect declarations in platform-specific source sets",
      "confidence": "high",
      "severity": "high",
      "category": "multiplatform",
      "framework": "multiplatform"
    },
    {
      "id": "kotlin_platform_dependency_missing",
      "pattern": ".*platform.*dependency.*not found.*|.*native.*target.*dependency.*",
      "error_type": "PlatformDependencyMissing",
      "description": "Platform-specific dependency not available for target platform",
      "root_cause": "kotlin_platform_dependency_missing",
      "suggestion": "Add platform-specific dependencies to respective source sets or use expect/actual for platform abstraction",
      "confidence": "high",
      "severity": "medium",
      "category": "multiplatform",
      "framework": "multiplatform"
    },
    {
      "id": "kotlin_native_interop_error",
      "pattern": ".*native.*interop.*error.*|.*C.*interop.*failed.*",
      "error_type": "NativeInteropError",
      "description": "Kotlin/Native C interop error",
      "root_cause": "kotlin_native_interop_error",
      "suggestion": "Check C headers and library paths, ensure proper cinterop configuration in build.gradle.kts",
      "confidence": "medium",
      "severity": "medium",
      "category": "multiplatform",
      "framework": "multiplatform"
    },
    {
      "id": "kotlin_js_external_declaration",
      "pattern": ".*external.*declaration.*JS.*|.*@JsModule.*error.*",
      "error_type": "JsExternalDeclarationError",
      "description": "Kotlin/JS external declaration error",
      "root_cause": "kotlin_js_external_error",
      "suggestion": "Verify external declarations match JavaScript API, check @JsModule and @JsName annotations",
      "confidence": "medium",
      "severity": "medium",
      "category": "multiplatform",
      "framework": "multiplatform"
    },
    {
      "id": "kotlin_wasm_not_supported",
      "pattern": ".*WASM.*not supported.*|.*WebAssembly.*target.*error.*",
      "error_type": "WasmNotSupported",
      "description": "WASM target not supported for this operation",
      "root_cause": "kotlin_wasm_not_supported",
      "suggestion": "Use alternative implementation for WASM target or check WASM compatibility of dependencies",
      "confidence": "medium",
      "severity": "medium",
      "category": "multiplatform",
      "framework": "multiplatform"
    },
    {
      "id": "kotlin_common_source_platform_specific",
      "pattern": ".*common.*source.*platform.*specific.*|.*commonMain.*platform.*code.*",
      "error_type": "PlatformSpecificInCommon",
      "description": "Platform-specific code used in common source set",
      "root_cause": "kotlin_platform_specific_in_common",
      "suggestion": "Move platform-specific code to platform source sets or use expect/actual declarations",
      "confidence": "high",
      "severity": "medium",
      "category": "multiplatform",
      "framework": "multiplatform"
    },
    {
      "id": "kotlin_serialization_multiplatform",
      "pattern": ".*serialization.*multiplatform.*error.*|.*@Serializable.*platform.*",
      "error_type": "SerializationMultiplatformError",
      "description": "Kotlin serialization error in multiplatform context",
      "root_cause": "kotlin_serialization_multiplatform_error",
      "suggestion": "Ensure kotlinx.serialization is properly configured for all target platforms",
      "confidence": "medium",
      "severity": "medium",
      "category": "multiplatform",
      "framework": "multiplatform"
    },
    {
      "id": "kotlin_coroutines_multiplatform",
      "pattern": ".*coroutines.*multiplatform.*error.*|.*runBlocking.*native.*",
      "error_type": "CoroutinesMultiplatformError",
      "description": "Coroutines error in multiplatform context",
      "root_cause": "kotlin_coroutines_multiplatform_error",
      "suggestion": "Use platform-appropriate coroutine dispatchers, avoid runBlocking in Kotlin/Native",
      "confidence": "medium",
      "severity": "medium",
      "category": "multiplatform",
      "framework": "multiplatform"
    },
    {
      "id": "kotlin_gradle_multiplatform_config",
      "pattern": ".*multiplatform.*gradle.*configuration.*|.*kotlin.*multiplatform.*plugin.*",
      "error_type": "GradleMultiplatformConfig",
      "description": "Gradle multiplatform configuration error",
      "root_cause": "kotlin_gradle_multiplatform_config",
      "suggestion": "Check kotlin multiplatform plugin configuration and target definitions in build.gradle.kts",
      "confidence": "medium",
      "severity": "medium",
      "category": "multiplatform",
      "framework": "multiplatform"
    },
    {
      "id": "kotlin_target_not_supported",
      "pattern": ".*target.*not supported.*|.*platform.*target.*unavailable.*",
      "error_type": "TargetNotSupported",
      "description": "Target platform not supported by library or feature",
      "root_cause": "kotlin_target_not_supported",
      "suggestion": "Check library compatibility with target platforms or provide alternative implementation",
      "confidence": "medium",
      "severity": "medium",
      "category": "multiplatform",
      "framework": "multiplatform"
    },
    {
      "id": "kotlin_native_memory_management",
      "pattern": ".*native.*memory.*management.*|.*Kotlin.*Native.*memory.*",
      "error_type": "NativeMemoryManagement",
      "description": "Kotlin/Native memory management issue",
      "root_cause": "kotlin_native_memory_management",
      "suggestion": "Check object lifecycle in Kotlin/Native, avoid memory leaks with proper cleanup",
      "confidence": "medium",
      "severity": "medium",
      "category": "multiplatform",
      "framework": "multiplatform"
    },
    {
      "id": "kotlin_ios_interop_error",
      "pattern": ".*iOS.*interop.*error.*|.*Objective.*C.*Kotlin.*",
      "error_type": "IosInteropError",
      "description": "iOS/Objective-C interop error",
      "root_cause": "kotlin_ios_interop_error",
      "suggestion": "Check Objective-C headers and framework imports, ensure proper iOS target configuration",
      "confidence": "medium",
      "severity": "medium",
      "category": "multiplatform",
      "framework": "multiplatform"
    },
    {
      "id": "kotlin_jvm_multiplatform_conflict",
      "pattern": ".*JVM.*multiplatform.*conflict.*|.*jvmMain.*conflict.*",
      "error_type": "JvmMultiplatformConflict",
      "description": "JVM target conflict in multiplatform project",
      "root_cause": "kotlin_jvm_multiplatform_conflict",
      "suggestion": "Resolve dependency conflicts between JVM and common source sets",
      "confidence": "medium",
      "severity": "medium",
      "category": "multiplatform",
      "framework": "multiplatform"
    },
    {
      "id": "kotlin_native_threading_error",
      "pattern": ".*Native.*threading.*error.*|.*worker.*thread.*Native.*",
      "error_type": "NativeThreadingError",
      "description": "Kotlin/Native threading error",
      "root_cause": "kotlin_native_threading_error",
      "suggestion": "Use appropriate threading model for Kotlin/Native, be aware of object sharing restrictions",
      "confidence": "medium",
      "severity": "medium",
      "category": "multiplatform",
      "framework": "multiplatform"
    },
    {
      "id": "kotlin_commonizer_error",
      "pattern": ".*commonizer.*error.*|.*platform.*library.*commonization.*",
      "error_type": "CommonizerError",
      "description": "Platform library commonization error",
      "root_cause": "kotlin_commonizer_error",
      "suggestion": "Check platform library compatibility and commonizer configuration",
      "confidence": "medium",
      "severity": "medium",
      "category": "multiplatform",
      "framework": "multiplatform"
    }
  ]
}