{
  "name": "Java Java Core Errors",
  "description": "Core Java error detection rules covering common runtime exceptions, I/O errors, and fundamental language issues",
  "version": "1.0.0",
  "rules": [
    {
      "id": "java_null_pointer_exception",
      "pattern": "java\\.lang\\.NullPointerException(?:.*?)",
      "error_type": "NullPointerException",
      "description": "Attempt to use a null reference",
      "root_cause": "java_null_pointer",
      "suggestion": "Add null checks before object usage. Use Optional<T> for potentially null values. Initialize objects properly and check method return values for null.",
      "confidence": "high",
      "severity": "high",
      "category": "core",
      "framework": "java"
    },
    {
      "id": "java_array_index_out_of_bounds",
      "pattern": "java\\.lang\\.ArrayIndexOutOfBoundsException(?:.*?)|java\\.lang\\.IndexOutOfBoundsException(?:.*?)",
      "error_type": "IndexOutOfBoundsException",
      "description": "Array or collection index is outside valid range",
      "root_cause": "java_index_out_of_bounds",
      "suggestion": "Check array/collection bounds before accessing elements. Use length/size() property to validate indices. Consider using enhanced for-loops or iterators.",
      "confidence": "high",
      "severity": "high",
      "category": "core",
      "framework": "java"
    },
    {
      "id": "java_class_not_found",
      "pattern": "java\\.lang\\.ClassNotFoundException(?:.*?)|java\\.lang\\.NoClassDefFoundError(?:.*?)",
      "error_type": "ClassNotFoundException",
      "description": "JVM cannot find or load a required class",
      "root_cause": "java_class_not_found",
      "suggestion": "Verify class is in classpath. Check for missing dependencies or incorrect package names. Clean and rebuild project to resolve compilation issues.",
      "confidence": "high",
      "severity": "high",
      "category": "core",
      "framework": "java"
    },
    {
      "id": "java_class_cast_exception",
      "pattern": "java\\.lang\\.ClassCastException(?:.*?)",
      "error_type": "ClassCastException",
      "description": "Invalid type casting attempted",
      "root_cause": "java_class_cast_error",
      "suggestion": "Use instanceof checks before casting. Consider using generics to avoid raw types. Use safe casting patterns or Optional with type checking.",
      "confidence": "high",
      "severity": "high",
      "category": "core",
      "framework": "java"
    },
    {
      "id": "java_illegal_argument_exception",
      "pattern": "java\\.lang\\.IllegalArgumentException(?:.*?)",
      "error_type": "IllegalArgumentException",
      "description": "Method called with invalid argument",
      "root_cause": "java_illegal_argument",
      "suggestion": "Validate method parameters before use. Add proper input validation and throw meaningful exception messages. Use precondition checks in methods.",
      "confidence": "high",
      "severity": "medium",
      "category": "core",
      "framework": "java"
    },
    {
      "id": "java_illegal_state_exception",
      "pattern": "java\\.lang\\.IllegalStateException(?:.*?)",
      "error_type": "IllegalStateException",
      "description": "Object is in inappropriate state for method invocation",
      "root_cause": "java_illegal_state",
      "suggestion": "Check object state before method calls. Implement proper state management and validation. Use state pattern for complex state transitions.",
      "confidence": "high",
      "severity": "medium",
      "category": "core",
      "framework": "java"
    },
    {
      "id": "java_number_format_exception",
      "pattern": "java\\.lang\\.NumberFormatException(?:.*?)",
      "error_type": "NumberFormatException",
      "description": "String cannot be parsed to numeric type",
      "root_cause": "java_number_format_error",
      "suggestion": "Validate string format before parsing. Use try-catch blocks for parsing operations. Consider using NumberUtils or custom validation methods.",
      "confidence": "high",
      "severity": "medium",
      "category": "core",
      "framework": "java"
    },
    {
      "id": "java_arithmetic_exception",
      "pattern": "java\\.lang\\.ArithmeticException(?:.*?)",
      "error_type": "ArithmeticException",
      "description": "Arithmetic operation error, typically division by zero",
      "root_cause": "java_arithmetic_error",
      "suggestion": "Check for zero division before arithmetic operations. Use BigDecimal for precise decimal calculations. Handle edge cases in mathematical operations.",
      "confidence": "high",
      "severity": "medium",
      "category": "core",
      "framework": "java"
    },
    {
      "id": "java_io_exception",
      "pattern": "java\\.io\\.IOException(?:.*?)",
      "error_type": "IOException",
      "description": "Input/output operation failed",
      "root_cause": "java_io_error",
      "suggestion": "Handle I/O exceptions with try-catch blocks. Use try-with-resources for automatic resource management. Check file permissions and paths.",
      "confidence": "high",
      "severity": "medium",
      "category": "core",
      "framework": "java"
    },
    {
      "id": "java_file_not_found",
      "pattern": "java\\.io\\.FileNotFoundException(?:.*?)",
      "error_type": "FileNotFoundException",
      "description": "Required file does not exist or cannot be accessed",
      "root_cause": "java_file_not_found",
      "suggestion": "Check file path and permissions. Use File.exists() before file operations. Handle missing files gracefully with default values or user prompts.",
      "confidence": "high",
      "severity": "medium",
      "category": "core",
      "framework": "java"
    },
    {
      "id": "java_security_exception",
      "pattern": "java\\.lang\\.SecurityException(?:.*?)",
      "error_type": "SecurityException",
      "description": "Security policy violation or insufficient permissions",
      "root_cause": "java_security_violation",
      "suggestion": "Check security policies and permissions. Review SecurityManager settings. Ensure proper access controls for sensitive operations.",
      "confidence": "high",
      "severity": "high",
      "category": "core",
      "framework": "java"
    },
    {
      "id": "java_reflection_exception",
      "pattern": "java\\.lang\\.reflect\\.(?:InvocationTargetException|IllegalAccessException|NoSuchMethodException|NoSuchFieldException)(?:.*?)",
      "error_type": "ReflectionException",
      "description": "Reflection operation failed",
      "root_cause": "java_reflection_error",
      "suggestion": "Check class, method, or field names for typos. Verify access modifiers allow reflection access. Use setAccessible(true) for private members if needed.",
      "confidence": "high",
      "severity": "medium",
      "category": "core",
      "framework": "java"
    },
    {
      "id": "java_unsupported_operation",
      "pattern": "java\\.lang\\.UnsupportedOperationException(?:.*?)",
      "error_type": "UnsupportedOperationException",
      "description": "Operation not supported by this implementation",
      "root_cause": "java_unsupported_operation",
      "suggestion": "Check if the collection or object supports the operation. Use appropriate implementation classes. Implement missing methods or use alternative approaches.",
      "confidence": "high",
      "severity": "medium",
      "category": "core",
      "framework": "java"
    },
    {
      "id": "java_stack_overflow",
      "pattern": "java\\.lang\\.StackOverflowError(?:.*?)",
      "error_type": "StackOverflowError",
      "description": "Stack overflow due to infinite recursion or deep call stack",
      "root_cause": "java_stack_overflow",
      "suggestion": "Check for infinite recursion in methods. Add base cases to recursive methods. Increase stack size with -Xss JVM parameter or refactor to iterative approach.",
      "confidence": "high",
      "severity": "critical",
      "category": "core",
      "framework": "java"
    },
    {
      "id": "java_out_of_memory",
      "pattern": "java\\.lang\\.OutOfMemoryError(?:.*?)",
      "error_type": "OutOfMemoryError",
      "description": "JVM ran out of memory",
      "root_cause": "java_out_of_memory",
      "suggestion": "Increase heap size with -Xmx JVM parameter. Check for memory leaks and optimize object creation. Use memory profiling tools to identify issues.",
      "confidence": "high",
      "severity": "critical",
      "category": "core",
      "framework": "java"
    },
    {
      "id": "java_string_index_out_of_bounds",
      "pattern": "java\\.lang\\.StringIndexOutOfBoundsException(?:.*?)",
      "error_type": "StringIndexOutOfBoundsException",
      "description": "String index is outside valid range",
      "root_cause": "java_string_index_error",
      "suggestion": "Check string length before accessing characters. Validate substring parameters. Use isEmpty() or length() checks before string operations.",
      "confidence": "high",
      "severity": "medium",
      "category": "core",
      "framework": "java"
    },
    {
      "id": "java_instantiation_exception",
      "pattern": "java\\.lang\\.InstantiationException(?:.*?)",
      "error_type": "InstantiationException",
      "description": "Cannot instantiate class, typically abstract class or interface",
      "root_cause": "java_instantiation_error",
      "suggestion": "Check if class is abstract or interface. Use concrete implementation classes. Verify class has accessible constructor.",
      "confidence": "high",
      "severity": "medium",
      "category": "core",
      "framework": "java"
    },
    {
      "id": "java_clone_not_supported",
      "pattern": "java\\.lang\\.CloneNotSupportedException(?:.*?)",
      "error_type": "CloneNotSupportedException",
      "description": "Object does not support cloning",
      "root_cause": "java_clone_not_supported",
      "suggestion": "Implement Cloneable interface and override clone() method. Use copy constructors or factory methods as alternatives to cloning.",
      "confidence": "high",
      "severity": "low",
      "category": "core",
      "framework": "java"
    },
    {
      "id": "java_interrupted_exception",
      "pattern": "java\\.lang\\.InterruptedException(?:.*?)",
      "error_type": "InterruptedException",
      "description": "Thread was interrupted while waiting or sleeping",
      "root_cause": "java_thread_interrupted",
      "suggestion": "Handle interrupted exception properly. Restore interrupt status with Thread.currentThread().interrupt() or propagate the exception. Don't ignore interruption.",
      "confidence": "high",
      "severity": "medium",
      "category": "core",
      "framework": "java"
    },
    {
      "id": "java_malformed_url",
      "pattern": "java\\.net\\.MalformedURLException(?:.*?)",
      "error_type": "MalformedURLException",
      "description": "URL format is invalid",
      "root_cause": "java_malformed_url",
      "suggestion": "Validate URL format before use. Use URL.toURI() for additional validation. Consider using URI class for more robust URL handling.",
      "confidence": "high",
      "severity": "medium",
      "category": "core",
      "framework": "java"
    },
    {
      "id": "java_socket_exception",
      "pattern": "java\\.net\\.SocketException(?:.*?)|java\\.net\\.ConnectException(?:.*?)",
      "error_type": "SocketException",
      "description": "Network socket operation failed",
      "root_cause": "java_socket_error",
      "suggestion": "Check network connectivity and firewall settings. Verify server is running and port is correct. Implement retry logic with exponential backoff.",
      "confidence": "high",
      "severity": "medium",
      "category": "core",
      "framework": "java"
    },
    {
      "id": "java_unknown_host",
      "pattern": "java\\.net\\.UnknownHostException(?:.*?)",
      "error_type": "UnknownHostException",
      "description": "Cannot resolve hostname",
      "root_cause": "java_unknown_host",
      "suggestion": "Check hostname spelling and DNS configuration. Verify network connectivity. Use IP addresses as fallback or implement hostname validation.",
      "confidence": "high",
      "severity": "medium",
      "category": "core",
      "framework": "java"
    },
    {
      "id": "java_timeout_exception",
      "pattern": "java\\.net\\.SocketTimeoutException(?:.*?)|java\\.util\\.concurrent\\.TimeoutException(?:.*?)",
      "error_type": "TimeoutException",
      "description": "Operation timed out waiting for response",
      "root_cause": "java_timeout_error",
      "suggestion": "Increase timeout values if appropriate. Check network latency and server response times. Implement proper timeout handling and retry mechanisms.",
      "confidence": "high",
      "severity": "medium",
      "category": "core",
      "framework": "java"
    },
    {
      "id": "java_parse_exception",
      "pattern": "java\\.text\\.ParseException(?:.*?)",
      "error_type": "ParseException",
      "description": "String parsing failed, typically date/time parsing",
      "root_cause": "java_parse_error",
      "suggestion": "Verify input format matches expected pattern. Use SimpleDateFormat or DateTimeFormatter with correct patterns. Handle parsing exceptions gracefully.",
      "confidence": "high",
      "severity": "medium",
      "category": "core",
      "framework": "java"
    },
    {
      "id": "java_zip_exception",
      "pattern": "java\\.util\\.zip\\.ZipException(?:.*?)",
      "error_type": "ZipException",
      "description": "ZIP file operation failed",
      "root_cause": "java_zip_error",
      "suggestion": "Check ZIP file integrity and format. Verify file is not corrupted. Handle compression/decompression errors appropriately.",
      "confidence": "high",
      "severity": "medium",
      "category": "core",
      "framework": "java"
    },
    {
      "id": "java_enum_constant_not_present",
      "pattern": "java\\.lang\\.EnumConstantNotPresentException(?:.*?)",
      "error_type": "EnumConstantNotPresentException",
      "description": "Enum constant not found in enum type",
      "root_cause": "java_enum_constant_missing",
      "suggestion": "Check enum constant names for typos. Handle enum parsing with try-catch blocks. Use valueOf() with proper exception handling.",
      "confidence": "medium",
      "severity": "medium",
      "category": "core",
      "framework": "java"
    },
    {
      "id": "java_annotation_format_error",
      "pattern": "java\\.lang\\.annotation\\.AnnotationFormatError(?:.*?)",
      "error_type": "AnnotationFormatError",
      "description": "Annotation format is invalid or malformed",
      "root_cause": "java_annotation_format_error",
      "suggestion": "Check annotation syntax and parameters. Verify annotation targets and retention policies. Review annotation processing configuration.",
      "confidence": "medium",
      "severity": "medium",
      "category": "core",
      "framework": "java"
    },
    {
      "id": "java_assertion_error",
      "pattern": "java\\.lang\\.AssertionError(?:.*?)",
      "error_type": "AssertionError",
      "description": "Assertion failed during execution",
      "root_cause": "java_assertion_failure",
      "suggestion": "Review assertion conditions and expected values. Enable assertions with -ea JVM flag. Fix logic errors causing assertion failures.",
      "confidence": "high",
      "severity": "medium",
      "category": "core",
      "framework": "java"
    },
    {
      "id": "java_negative_array_size",
      "pattern": "java\\.lang\\.NegativeArraySizeException(?:.*?)",
      "error_type": "NegativeArraySizeException",
      "description": "Attempted to create array with negative size",
      "root_cause": "java_negative_array_size",
      "suggestion": "Validate array size parameters before array creation. Check calculations that determine array size. Use appropriate bounds checking.",
      "confidence": "high",
      "severity": "medium",
      "category": "core",
      "framework": "java"
    }
  ]
}