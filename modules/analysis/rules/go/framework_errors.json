{
  "description": "Go web framework (Gin, Echo) specific error patterns",
  "version": "0.1.0",
  "rules": [
    {
      "id": "gin_invalid_binding",
      "pattern": "binding:.*required",
      "type": "binding error",
      "description": "Required field missing in Gin binding",
      "root_cause": "gin_binding_required_field",
      "suggestion": "Ensure required fields are provided in the request or make them optional in the struct tag.",
      "confidence": "high",
      "severity": "medium",
      "category": "gin",
      "framework": "gin"
    },
    {
      "id": "gin_type_error",
      "pattern": "json: cannot unmarshal (\\w+) into Go struct field ([\\w\\.]+) of type (\\w+)",
      "type": "json.UnmarshalTypeError",
      "description": "JSON type doesn't match struct field type in Gin",
      "root_cause": "gin_json_type_mismatch",
      "suggestion": "Ensure the JSON data type matches the struct field type, or provide custom binding logic.",
      "confidence": "high",
      "severity": "medium",
      "category": "gin",
      "framework": "gin"
    },
    {
      "id": "echo_render_error",
      "pattern": "renderer not registered for type",
      "type": "echo.HTTPError",
      "description": "No renderer registered for content type in Echo",
      "root_cause": "echo_renderer_not_registered",
      "suggestion": "Register a renderer for the content type using e.Renderer.",
      "confidence": "high",
      "severity": "medium",
      "category": "echo",
      "framework": "echo"
    },
    {
      "id": "echo_invalid_binding",
      "pattern": "code=400, message=([^:]+)",
      "type": "echo.HTTPError",
      "description": "Invalid request data in Echo binding",
      "root_cause": "echo_binding_error",
      "suggestion": "Check request format and validation rules. Ensure the request data matches the expected format.",
      "confidence": "medium",
      "severity": "medium",
      "category": "echo",
      "framework": "echo"
    },
    {
      "id": "echo_not_found",
      "pattern": "code=404, message=Not Found",
      "type": "echo.HTTPError",
      "description": "Route not found in Echo",
      "root_cause": "echo_route_not_found",
      "suggestion": "Verify the route is registered correctly. Check for typos in the URL pattern.",
      "confidence": "high",
      "severity": "medium",
      "category": "echo",
      "framework": "echo"
    },
    {
      "id": "http_handler_nil",
      "pattern": "http: nil Handler",
      "type": "http.Server",
      "description": "Nil handler passed to HTTP server",
      "root_cause": "go_http_nil_handler",
      "suggestion": "Ensure a valid handler is provided to the HTTP server.",
      "confidence": "high",
      "severity": "high",
      "category": "http",
      "framework": "standard"
    },
    {
      "id": "http_listen_error",
      "pattern": "listen (tcp|unix) ([^:]+): bind: (address already in use|permission denied)",
      "type": "net.OpError",
      "description": "HTTP server failed to listen on port/socket",
      "root_cause": "go_http_listen_error",
      "suggestion": "Ensure the port/socket is available and the application has sufficient permissions.",
      "confidence": "high",
      "severity": "high",
      "category": "http",
      "framework": "standard"
    }
  ],
  "extended_frameworks": [
    {
      "id": "fiber_binding_error",
      "pattern": "fiber: ([^\\n]*binding[^\\n]*error[^\\n]*)",
      "type": "fiber error",
      "description": "Fiber framework request binding error",
      "root_cause": "fiber_binding_error",
      "suggestion": "Check request body format and struct tags. Ensure Content-Type matches expected format.",
      "confidence": "high",
      "severity": "medium",
      "category": "fiber",
      "framework": "fiber"
    },
    {
      "id": "fiber_route_not_found",
      "pattern": "fiber: route not found",
      "type": "fiber error",
      "description": "Fiber route not found",
      "root_cause": "fiber_route_not_found",
      "suggestion": "Verify route registration and URL pattern. Check for typos in route paths.",
      "confidence": "high",
      "severity": "medium",
      "category": "fiber",
      "framework": "fiber"
    },
    {
      "id": "chi_route_conflict",
      "pattern": "chi: route conflict ([^\\n]+)",
      "type": "chi error",
      "description": "Chi router route conflict",
      "root_cause": "chi_route_conflict",
      "suggestion": "Check for duplicate or conflicting route patterns. Ensure unique route definitions.",
      "confidence": "high",
      "severity": "medium",
      "category": "chi",
      "framework": "chi"
    },
    {
      "id": "gorilla_mux_vars_nil",
      "pattern": "gorilla/mux: vars is nil",
      "type": "gorilla/mux error",
      "description": "Gorilla Mux route variables not found",
      "root_cause": "gorilla_mux_vars_nil",
      "suggestion": "Ensure route has defined variables or check if request matched a route with variables.",
      "confidence": "high",
      "severity": "medium",
      "category": "gorilla",
      "framework": "gorilla/mux"
    },
    {
      "id": "iris_context_stopped",
      "pattern": "iris: context stopped",
      "type": "iris error",
      "description": "Iris context was stopped/cancelled",
      "root_cause": "iris_context_stopped",
      "suggestion": "Handle context cancellation appropriately. Check for timeout or client disconnection.",
      "confidence": "high",
      "severity": "medium",
      "category": "iris",
      "framework": "iris"
    },
    {
      "id": "revel_action_not_found",
      "pattern": "revel: action not found ([^\\n]+)",
      "type": "revel error",
      "description": "Revel framework action method not found",
      "root_cause": "revel_action_not_found",
      "suggestion": "Ensure controller action method exists and is properly exported (capitalized).",
      "confidence": "high",
      "severity": "medium",
      "category": "revel",
      "framework": "revel"
    },
    {
      "id": "beego_controller_panic",
      "pattern": "beego: controller panic ([^\\n]+)",
      "type": "beego error",
      "description": "Beego controller panicked during execution",
      "root_cause": "beego_controller_panic",
      "suggestion": "Add proper error handling in controller methods. Use defer recover() if needed.",
      "confidence": "high",
      "severity": "high",
      "category": "beego",
      "framework": "beego"
    },
    {
      "id": "buffalo_middleware_error",
      "pattern": "buffalo: middleware error ([^\\n]+)",
      "type": "buffalo error",
      "description": "Buffalo middleware execution error",
      "root_cause": "buffalo_middleware_error",
      "suggestion": "Check middleware implementation and ensure proper error handling and next() calls.",
      "confidence": "high",
      "severity": "medium",
      "category": "buffalo",
      "framework": "buffalo"
    },
    {
      "id": "martini_dependency_not_found",
      "pattern": "martini: dependency not found ([^\\n]+)",
      "type": "martini error",
      "description": "Martini dependency injection failed",
      "root_cause": "martini_dependency_not_found",
      "suggestion": "Ensure dependency is properly mapped with Map() or MapTo() before handler execution.",
      "confidence": "high",
      "severity": "medium",
      "category": "martini",
      "framework": "martini"
    },
    {
      "id": "gorm_v2_association_error",
      "pattern": "gorm: association ([^\\s]+) not found",
      "type": "gorm error",
      "description": "GORM v2 association not found",
      "root_cause": "gorm_v2_association_error",
      "suggestion": "Check association definition in struct tags and ensure proper foreign key setup.",
      "confidence": "high",
      "severity": "medium",
      "category": "gorm",
      "framework": "gorm"
    },
    {
      "id": "websocket_connection_closed",
      "pattern": "websocket: close ([^\\n]+)",
      "type": "websocket error",
      "description": "WebSocket connection closed unexpectedly",
      "root_cause": "websocket_connection_closed",
      "suggestion": "Handle connection closure gracefully. Implement reconnection logic if needed.",
      "confidence": "high",
      "severity": "medium",
      "category": "websocket",
      "framework": "gorilla/websocket"
    },
    {
      "id": "graphql_resolver_error",
      "pattern": "graphql: resolver error ([^\\n]+)",
      "type": "graphql error",
      "description": "GraphQL resolver execution error",
      "root_cause": "graphql_resolver_error",
      "suggestion": "Check resolver implementation and ensure proper error handling. Validate input arguments.",
      "confidence": "high",
      "severity": "medium",
      "category": "graphql",
      "framework": "graphql-go"
    }
  ]
}