{
  "name": "PHP Core Error Rules",
  "description": "Rules for detecting and fixing common PHP errors",
  "version": "0.1.0",
  "rules": [
    {
      "id": "php_undefined_variable",
      "pattern": "Undefined variable\\s*:\\s*\\$(\\w+)",
      "type": "E_NOTICE",
      "description": "Undefined variable accessed",
      "root_cause": "php_undefined_variable",
      "suggestion": "Initialize the variable before using it or check with isset() if it exists. Consider using null coalescing operator (??) for fallback values.",
      "confidence": "high",
      "severity": "medium",
      "category": "core",
      "framework": "php"
    },
    {
      "id": "php_undefined_method",
      "pattern": "Call to undefined method ([\\w\\\\]+)::([\\w]+)\\(\\)",
      "type": "E_ERROR",
      "description": "Call to a method that doesn't exist",
      "root_cause": "php_undefined_method",
      "suggestion": "Check method name for typos. Verify the class implements the method or use method_exists() to check before calling.",
      "confidence": "high",
      "severity": "high",
      "category": "core",
      "framework": "php"
    },
    {
      "id": "php_undefined_function",
      "pattern": "Call to undefined function ([\\w\\\\]+)\\(\\)",
      "type": "E_ERROR",
      "description": "Call to a function that doesn't exist",
      "root_cause": "php_undefined_function",
      "suggestion": "Check function name for typos. Ensure the required extension is installed or the function is properly imported.",
      "confidence": "high",
      "severity": "high",
      "category": "core",
      "framework": "php"
    },
    {
      "id": "php_null_reference",
      "pattern": "Call to a member function ([\\w]+)\\(\\) on null",
      "type": "E_ERROR",
      "description": "Attempted to call a method on a null object",
      "root_cause": "php_null_reference",
      "suggestion": "Add null check before calling methods on potentially null variables. Use null safe operator (?->) in PHP 8+ or use optional chaining pattern.",
      "confidence": "high",
      "severity": "high",
      "category": "core",
      "framework": "php"
    },
    {
      "id": "php_type_error",
      "pattern": "TypeError: Argument (\\d+) passed to ([\\w\\\\]+)::([\\w]+)\\(\\) must be of (the type|type) ([\\w]+), ([\\w]+) given",
      "type": "TypeError",
      "description": "Function called with incorrect argument type",
      "root_cause": "php_type_error",
      "suggestion": "Ensure correct type is passed to the function. Use type casting or validation before passing the argument. In PHP 7+, consider adding type declarations to functions.",
      "confidence": "high",
      "severity": "high",
      "category": "core",
      "framework": "php"
    },
    {
      "id": "php_syntax_error",
      "pattern": "Parse error: syntax error, unexpected ([^,]+)( in |,)",
      "type": "E_PARSE",
      "description": "PHP code contains syntax errors",
      "root_cause": "php_syntax_error",
      "suggestion": "Fix the syntax issue. Common issues include missing semicolons, unbalanced brackets, or incorrect PHP tags.",
      "confidence": "high",
      "severity": "high",
      "category": "syntax",
      "framework": "php"
    },
    {
      "id": "php_index_error",
      "pattern": "Undefined (index|offset|array key):\\s*([^\\s]+)",
      "type": "E_NOTICE",
      "description": "Attempted to access an array index that doesn't exist",
      "root_cause": "php_undefined_index",
      "suggestion": "Check if the index exists with isset() or array_key_exists() before accessing it. Use null coalescing operator (??) for fallback values.",
      "confidence": "high",
      "severity": "medium",
      "category": "core",
      "framework": "php"
    },
    {
      "id": "php_require_error",
      "pattern": "Failed opening required '([^']+)'",
      "type": "E_COMPILE_ERROR",
      "description": "Failed to require a file",
      "root_cause": "php_missing_file",
      "suggestion": "Check the file path is correct. Ensure the file exists and is readable by the web server.",
      "confidence": "high",
      "severity": "high",
      "category": "core",
      "framework": "php"
    },
    {
      "id": "php_class_not_found",
      "pattern": "Class '([^']+)' not found",
      "type": "E_ERROR",
      "description": "Referenced a class that doesn't exist",
      "root_cause": "php_missing_class",
      "suggestion": "Check class name for typos. Ensure the class file is included/required or properly autoloaded. Verify namespace declarations.",
      "confidence": "high",
      "severity": "high",
      "category": "core",
      "framework": "php"
    },
    {
      "id": "php_autoload_error",
      "pattern": "spl_autoload_call\\(\\):\\s*failed to open stream",
      "type": "E_ERROR",
      "description": "Class autoloader failed to load a class",
      "root_cause": "php_autoload_error",
      "suggestion": "Check autoloader configuration. Ensure namespace and directory structure match PSR-4 standards. Verify composer dump-autoload has been run.",
      "confidence": "high",
      "severity": "high",
      "category": "core",
      "framework": "php"
    },
    {
      "id": "php_division_by_zero",
      "pattern": "Division by zero",
      "type": "E_WARNING",
      "description": "Attempted to divide by zero",
      "root_cause": "php_division_by_zero",
      "suggestion": "Add a check to ensure the divisor is not zero before performing division.",
      "confidence": "high",
      "severity": "medium",
      "category": "core",
      "framework": "php"
    },
    {
      "id": "php_memory_limit",
      "pattern": "Allowed memory size of (\\d+) bytes exhausted",
      "type": "E_ERROR",
      "description": "Script exceeded memory limit",
      "root_cause": "php_memory_limit",
      "suggestion": "Optimize memory usage in the script. Consider increasing memory_limit in php.ini for memory-intensive operations.",
      "confidence": "high",
      "severity": "high",
      "category": "runtime",
      "framework": "php"
    },
    {
      "id": "php_max_execution_time",
      "pattern": "Maximum execution time of (\\d+) seconds exceeded",
      "type": "E_ERROR",
      "description": "Script execution timed out",
      "root_cause": "php_timeout",
      "suggestion": "Optimize script performance. For long-running tasks, consider breaking them into smaller chunks or using background processing.",
      "confidence": "high",
      "severity": "high",
      "category": "runtime",
      "framework": "php"
    },
    {
      "id": "php_pdo_error",
      "pattern": "SQLSTATE\\[([^\\]]+)\\]",
      "type": "PDOException",
      "description": "Database operation failed",
      "root_cause": "php_database_error",
      "suggestion": "Check SQL syntax. Verify database credentials and connection parameters. Consider using prepared statements to prevent SQL injection.",
      "confidence": "high",
      "severity": "high",
      "category": "database",
      "framework": "php"
    },
    {
      "id": "php_undefined_property",
      "pattern": "Undefined property:\\s+([\\w\\\\]+)::\\$(\\w+)",
      "type": "E_NOTICE",
      "description": "Attempted to access a property that doesn't exist",
      "root_cause": "php_undefined_property",
      "suggestion": "Initialize class properties in the constructor. Check property names for typos. Use property_exists() or isset() to check if a property exists.",
      "confidence": "high",
      "severity": "medium",
      "category": "core",
      "framework": "php"
    },
    {
      "id": "php_access_level_error",
      "pattern": "Cannot access (private|protected) property|method ([\\w\\\\]+)::\\$(\\w+)",
      "type": "E_ERROR",
      "description": "Attempted to access a private or protected member",
      "root_cause": "php_access_level_error",
      "suggestion": "Check the access level of the property or method. Use accessor methods (getters/setters) instead of direct access.",
      "confidence": "high",
      "severity": "medium",
      "category": "core",
      "framework": "php"
    },
    {
      "id": "php_redeclare_error",
      "pattern": "Cannot redeclare ([\\w\\\\]+)::(\\w+)\\(\\)",
      "type": "E_ERROR",
      "description": "Function or method declared more than once",
      "root_cause": "php_redeclare_error",
      "suggestion": "Ensure functions and classes are only included once. Use include_once or require_once. Check for duplicate method declarations in class hierarchies.",
      "confidence": "high",
      "severity": "high",
      "category": "core",
      "framework": "php"
    },
    {
      "id": "php_headers_already_sent",
      "pattern": "Warning: Cannot modify header information - headers already sent",
      "type": "E_WARNING",
      "description": "Attempted to set HTTP headers after output has been sent",
      "root_cause": "php_headers_already_sent",
      "suggestion": "Ensure all header() calls come before any output (HTML, whitespace, etc.). Check for BOM markers or whitespace before <?php tags.",
      "confidence": "high",
      "severity": "medium",
      "category": "core",
      "framework": "php"
    },
    {
      "id": "php_missing_argument",
      "pattern": "Warning: Missing argument (\\d+) for ([\\w\\\\]+)::(\\w+)\\(\\)",
      "type": "E_WARNING",
      "description": "Function called with fewer arguments than required",
      "root_cause": "php_missing_argument",
      "suggestion": "Provide all required arguments to the function. Use default parameter values for optional arguments.",
      "confidence": "high",
      "severity": "medium",
      "category": "core",
      "framework": "php"
    },
    {
      "id": "php_namespace_error",
      "pattern": "Fatal error: Namespace declaration statement has to be the very first statement",
      "type": "E_ERROR",
      "description": "Namespace declaration not at the beginning of the file",
      "root_cause": "php_namespace_error",
      "suggestion": "Move the namespace declaration to the beginning of the file, before any other code.",
      "confidence": "high",
      "severity": "high",
      "category": "syntax",
      "framework": "php"
    },
    {
      "id": "php_type_declaration_error",
      "pattern": "Declaration of .* must be compatible with .*",
      "type": "E_ERROR",
      "description": "Method signature incompatible with parent/interface",
      "root_cause": "php_type_declaration",
      "suggestion": "Ensure method signatures match exactly with parent class or interface. Check parameter types, return types, and type hints.",
      "confidence": "high",
      "severity": "high",
      "category": "type",
      "framework": "php"
    },
    {
      "id": "php_return_type_error",
      "pattern": "Return value of .* must be of type (.*), (.*) returned",
      "type": "TypeError",
      "description": "Function returned wrong type",
      "root_cause": "php_return_type",
      "suggestion": "Ensure the return value matches the declared return type. Cast or convert the value if needed.",
      "confidence": "high",
      "severity": "high",
      "category": "type",
      "framework": "php"
    },
    {
      "id": "php_trait_conflict",
      "pattern": "Trait method .* has not been applied, because there are collisions",
      "type": "E_ERROR",
      "description": "Trait method name conflict",
      "root_cause": "php_trait_conflict",
      "suggestion": "Use 'insteadof' or 'as' to resolve trait conflicts. Example: use TraitA, TraitB { TraitA::method insteadof TraitB; }",
      "confidence": "high",
      "severity": "high",
      "category": "trait",
      "framework": "php"
    },
    {
      "id": "php_trait_not_found",
      "pattern": "Trait '(.*)' not found",
      "type": "E_ERROR",
      "description": "Referenced trait doesn't exist",
      "root_cause": "php_trait_missing",
      "suggestion": "Check trait name and namespace. Ensure the trait file is properly autoloaded.",
      "confidence": "high",
      "severity": "high",
      "category": "trait",
      "framework": "php"
    },
    {
      "id": "php_namespace_not_found",
      "pattern": "Undefined namespace '(.*)'",
      "type": "E_ERROR",
      "description": "Referenced namespace doesn't exist",
      "root_cause": "php_namespace_missing",
      "suggestion": "Check namespace spelling. Use fully qualified namespace or add appropriate 'use' statement.",
      "confidence": "high",
      "severity": "high",
      "category": "namespace",
      "framework": "php"
    },
    {
      "id": "php_use_statement_error",
      "pattern": "The use statement with non-compound name .* has no effect",
      "type": "E_WARNING",
      "description": "Ineffective use statement",
      "root_cause": "php_use_statement",
      "suggestion": "Remove unnecessary use statements or ensure they reference the correct namespace.",
      "confidence": "medium",
      "severity": "low",
      "category": "namespace",
      "framework": "php"
    },
    {
      "id": "php_nullable_type_error",
      "pattern": "Cannot use '\\?' for nullable type declaration",
      "type": "E_ERROR",
      "description": "Invalid nullable type syntax",
      "root_cause": "php_nullable_type",
      "suggestion": "Use proper nullable type syntax: ?Type for parameters and return types in PHP 7.1+",
      "confidence": "high",
      "severity": "medium",
      "category": "type",
      "framework": "php"
    },
    {
      "id": "php_void_return_error",
      "pattern": "A void function must not return a value",
      "type": "E_ERROR",
      "description": "Void function returning a value",
      "root_cause": "php_void_return",
      "suggestion": "Remove the return value or change the return type declaration from void to the appropriate type.",
      "confidence": "high",
      "severity": "high",
      "category": "type",
      "framework": "php"
    },
    {
      "id": "php_trait_abstract_method",
      "pattern": "Class .* contains .* abstract method.* must therefore be declared abstract or implement",
      "type": "E_ERROR",
      "description": "Class using trait with abstract method not implemented",
      "root_cause": "php_trait_abstract",
      "suggestion": "Implement all abstract methods from traits or declare the class as abstract.",
      "confidence": "high",
      "severity": "high",
      "category": "trait",
      "framework": "php"
    },
    {
      "id": "php_union_type_error",
      "pattern": ".* must be of type (.*\\|.*), (.*) given",
      "type": "TypeError",
      "description": "Value doesn't match any type in union type declaration",
      "root_cause": "php_union_type",
      "suggestion": "Ensure the value matches at least one of the types in the union type declaration (PHP 8+).",
      "confidence": "high",
      "severity": "high",
      "category": "type",
      "framework": "php"
    },
    {
      "id": "php_property_type_error",
      "pattern": "Typed property .* must be (.*), (.*) used",
      "type": "TypeError",
      "description": "Property type mismatch",
      "root_cause": "php_property_type",
      "suggestion": "Ensure property assignments match the declared property type (PHP 7.4+).",
      "confidence": "high",
      "severity": "high",
      "category": "type",
      "framework": "php"
    },
    {
      "id": "php_trait_property_conflict",
      "pattern": ".* and .* define the same property .* in the composition",
      "type": "E_ERROR",
      "description": "Property conflict between traits",
      "root_cause": "php_trait_property",
      "suggestion": "Traits with conflicting properties cannot be used together. Remove or rename conflicting properties.",
      "confidence": "high",
      "severity": "high",
      "category": "trait",
      "framework": "php"
    },
    {
      "id": "php_namespace_alias_error",
      "pattern": "Cannot use .* as .* because the name is already in use",
      "type": "E_ERROR",
      "description": "Namespace alias conflict",
      "root_cause": "php_namespace_alias",
      "suggestion": "Use a different alias for the namespace or class to avoid naming conflicts.",
      "confidence": "high",
      "severity": "medium",
      "category": "namespace",
      "framework": "php"
    },
    {
      "id": "php_strict_types_error",
      "pattern": "strict_types declaration must be the very first statement",
      "type": "E_ERROR",
      "description": "Strict types declaration not at the beginning",
      "root_cause": "php_strict_types",
      "suggestion": "Place declare(strict_types=1) as the first statement after the opening PHP tag.",
      "confidence": "high",
      "severity": "high",
      "category": "type",
      "framework": "php"
    },
    {
      "id": "php_mixed_type_error",
      "pattern": "Cannot use 'mixed' as class name",
      "type": "E_ERROR",
      "description": "Reserved type name used as class name",
      "root_cause": "php_reserved_type",
      "suggestion": "Use a different name. 'mixed' is a reserved type name in PHP 8+.",
      "confidence": "high",
      "severity": "high",
      "category": "type",
      "framework": "php"
    },
    {
      "id": "php_attribute_error",
      "pattern": "Attribute .* does not exist",
      "type": "E_ERROR",
      "description": "Unknown attribute used",
      "root_cause": "php_attribute",
      "suggestion": "Check attribute name and namespace. Ensure the attribute class exists and is properly imported (PHP 8+).",
      "confidence": "high",
      "severity": "medium",
      "category": "attribute",
      "framework": "php"
    },
    {
      "id": "php_enum_error",
      "pattern": "Enum .* cannot have properties",
      "type": "E_ERROR",
      "description": "Invalid enum definition",
      "root_cause": "php_enum",
      "suggestion": "Enums cannot have state. Use enum cases for values and methods for behavior (PHP 8.1+).",
      "confidence": "high",
      "severity": "high",
      "category": "type",
      "framework": "php"
    },
    {
      "id": "php_readonly_error",
      "pattern": "Cannot modify readonly property",
      "type": "E_ERROR",
      "description": "Attempted to modify readonly property",
      "root_cause": "php_readonly",
      "suggestion": "Readonly properties can only be initialized once. Set the value in the constructor (PHP 8.1+).",
      "confidence": "high",
      "severity": "high",
      "category": "type",
      "framework": "php"
    }
  ]
}