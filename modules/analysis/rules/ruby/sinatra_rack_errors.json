{
  "name": "Ruby Sinatra and Rack Error Rules",
  "description": "Rules for detecting and fixing common Ruby Sinatra and Rack middleware errors",
  "version": "0.1.0",
  "rules": [
    {
      "id": "sinatra_not_found",
      "pattern": "Sinatra::NotFound",
      "type": "Sinatra::NotFound",
      "description": "No route matched the request",
      "root_cause": "sinatra_not_found",
      "suggestion": "Ensure the route is correctly defined in your Sinatra application. Check HTTP methods and path patterns.",
      "confidence": "high",
      "severity": "medium",
      "category": "sinatra",
      "framework": "sinatra"
    },
    {
      "id": "sinatra_template_not_found",
      "pattern": "Errno::ENOENT: No such file or directory(?: @ \\w+ - |: )(.+\\.(?:erb|haml|slim))",
      "type": "Errno::ENOENT",
      "description": "Sinatra template file not found",
      "root_cause": "sinatra_template_not_found",
      "suggestion": "Check the template path. Ensure the file exists in the correct views directory and has the correct extension.",
      "confidence": "high",
      "severity": "medium",
      "category": "sinatra",
      "framework": "sinatra"
    },
    {
      "id": "sinatra_missing_parameter",
      "pattern": "missing parameter: ([^\\s]+)",
      "type": "RuntimeError",
      "description": "Required parameter is missing from the request",
      "root_cause": "sinatra_missing_parameter",
      "suggestion": "Ensure required parameters are provided in the request. Add validation for parameters before using them.",
      "confidence": "high",
      "severity": "medium",
      "category": "sinatra",
      "framework": "sinatra"
    },
    {
      "id": "sinatra_erb_syntax_error",
      "pattern": "SyntaxError: (?:compile error|syntax error).+\\.erb",
      "type": "SyntaxError",
      "description": "Syntax error in ERB template",
      "root_cause": "sinatra_erb_syntax_error",
      "suggestion": "Check the ERB template for syntax errors. Common issues include unbalanced <% %> tags or invalid Ruby code inside ERB tags.",
      "confidence": "high",
      "severity": "medium",
      "category": "sinatra",
      "framework": "sinatra"
    },
    {
      "id": "sinatra_wrong_http_method",
      "pattern": "Sinatra::NotFound.*(?:GET|POST|PUT|DELETE|PATCH)",
      "type": "Sinatra::NotFound",
      "description": "Request used wrong HTTP method for route",
      "root_cause": "sinatra_wrong_http_method",
      "suggestion": "Ensure you're using the correct HTTP method for the route. Check your route definitions for method-specific routes.",
      "confidence": "medium",
      "severity": "medium",
      "category": "sinatra",
      "framework": "sinatra"
    },
    {
      "id": "rack_path_not_found",
      "pattern": "Rack::File::NotFound",
      "type": "Rack::File::NotFound",
      "description": "Static file not found by Rack",
      "root_cause": "rack_file_not_found",
      "suggestion": "Check the path to the static file. Ensure it exists in the public directory or the directory configured for static assets.",
      "confidence": "high",
      "severity": "medium",
      "category": "rack",
      "framework": "rack"
    },
    {
      "id": "rack_auth_basic_missing_credentials",
      "pattern": "Rack::Auth::Basic::Request::InvalidRequest",
      "type": "Rack::Auth::Basic::Request::InvalidRequest",
      "description": "Missing or invalid HTTP Basic authentication credentials",
      "root_cause": "rack_auth_basic_error",
      "suggestion": "Check that Basic authentication credentials are properly provided by the client. Verify authentication configuration.",
      "confidence": "high",
      "severity": "medium",
      "category": "rack",
      "framework": "rack"
    },
    {
      "id": "rack_body_proxy_error",
      "pattern": "Rack::BodyProxy::BodyProxyError",
      "type": "Rack::BodyProxy::BodyProxyError",
      "description": "Response body already closed",
      "root_cause": "rack_body_proxy_error",
      "suggestion": "Ensure response body is not closed prematurely. Check middleware stack for conflicts.",
      "confidence": "medium",
      "severity": "medium",
      "category": "rack",
      "framework": "rack"
    },
    {
      "id": "rack_session_missing_secret",
      "pattern": "ArgumentError: A secret is required to generate an hmac-sha1 digest",
      "type": "ArgumentError",
      "description": "Rack session missing secret key",
      "root_cause": "rack_session_missing_secret",
      "suggestion": "Configure a secret key for your Rack session cookie. Use a secure, random string for production applications.",
      "confidence": "high",
      "severity": "high",
      "category": "rack",
      "framework": "rack"
    },
    {
      "id": "rack_cookie_overflow",
      "pattern": "Rack::*Cookie overflow",
      "type": "RuntimeError",
      "description": "Cookie size exceeds allowed limit",
      "root_cause": "rack_cookie_overflow",
      "suggestion": "Reduce the amount of data stored in cookies. Consider using server-side session storage instead of cookie-based storage for large data.",
      "confidence": "high",
      "severity": "medium",
      "category": "rack",
      "framework": "rack"
    },
    {
      "id": "sinatra_error_in_after_filter",
      "pattern": "Sinatra::ErrorHandler::CaughtThrowSymbol",
      "type": "Sinatra::ErrorHandler::CaughtThrowSymbol",
      "description": "Error in Sinatra after filter",
      "root_cause": "sinatra_after_filter_error",
      "suggestion": "Check your after filter for errors. Ensure it doesn't call halt or redirect after the response has been sent.",
      "confidence": "high",
      "severity": "medium",
      "category": "sinatra",
      "framework": "sinatra"
    },
    {
      "id": "sinatra_extension_error",
      "pattern": "Sinatra::ExtensionError: (.*)",
      "type": "Sinatra::ExtensionError",
      "description": "Error in Sinatra extension",
      "root_cause": "sinatra_extension_error",
      "suggestion": "Check extension configuration and dependencies. Ensure it's compatible with your Sinatra version.",
      "confidence": "medium",
      "severity": "medium",
      "category": "sinatra",
      "framework": "sinatra"
    },
    {
      "id": "sinatra_content_type_error",
      "pattern": "invalid content-type: (.*)",
      "type": "RuntimeError",
      "description": "Invalid content type specified in Sinatra route",
      "root_cause": "sinatra_content_type_error",
      "suggestion": "Use valid MIME type strings for content_type. Check for typos in the content type name.",
      "confidence": "high",
      "severity": "medium",
      "category": "sinatra",
      "framework": "sinatra"
    },
    {
      "id": "rack_query_parser_error",
      "pattern": "Rack::QueryParser::(?:InvalidParameterError|ParameterTypeError)",
      "type": "Rack::QueryParser::InvalidParameterError",
      "description": "Invalid query string or parameter structure",
      "root_cause": "rack_query_parser_error",
      "suggestion": "Check query parameters for nested structures that exceed the depth limit. Use simpler parameter structures.",
      "confidence": "high",
      "severity": "medium",
      "category": "rack",
      "framework": "rack"
    },
    {
      "id": "sinatra_env_missing_path_info",
      "pattern": "undefined method `split' for nil:NilClass.*path_info",
      "type": "NoMethodError",
      "description": "PATH_INFO missing in Rack environment",
      "root_cause": "sinatra_env_missing_path_info",
      "suggestion": "Ensure Rack environment includes PATH_INFO. Check middleware that might be modifying the environment.",
      "confidence": "medium",
      "severity": "medium",
      "category": "sinatra",
      "framework": "sinatra"
    }
  ]
}