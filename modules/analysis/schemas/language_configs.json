{
  "python": {
    "language": "python",
    "field_mappings": {
      "error_type": ["exception_type", "type"],
      "message": "message",
      "stack_trace": ["traceback", "stack_trace"]
    },
    "stack_trace_fields": ["traceback", "stack_trace"],
    "stack_trace_format": "list",
    "version_fields": ["python_version", "language_version"],
    "framework_fields": ["framework"],
    "framework_version_fields": ["framework_version"],
    "detection_patterns": [
      "(?:Traceback \\(most recent call last\\):)",
      "(?:File \"[^\"]+\", line \\d+, in [^\\n]+)",
      "(?:\\w+Error:|\\w+Exception:)"
    ],
    "severity_mappings": {
      "debug": "DEBUG",
      "info": "INFO",
      "warning": "WARNING",
      "error": "ERROR",
      "critical": "CRITICAL",
      "fatal": "FATAL"
    }
  },
  "javascript": {
    "language": "javascript",
    "field_mappings": {
      "error_type": ["name", "type"],
      "message": "message",
      "stack_trace": ["stack", "stacktrace", "stack_trace"]
    },
    "stack_trace_fields": ["stack", "stacktrace", "stack_trace"],
    "stack_trace_format": "string",
    "version_fields": ["node_version", "js_version", "language_version"],
    "framework_fields": ["framework"],
    "framework_version_fields": ["framework_version"],
    "detection_patterns": [
      "(?:at \\w+ \\([^)]+\\))",
      "(?:TypeError|ReferenceError|SyntaxError):"
    ],
    "severity_mappings": {
      "debug": "debug",
      "info": "info",
      "warning": "warn",
      "error": "error",
      "critical": "error",
      "fatal": "fatal"
    }
  },
  "java": {
    "language": "java",
    "field_mappings": {
      "error_type": ["exception_class", "exception_type", "type"],
      "message": "message",
      "stack_trace": ["stack_trace", "stacktrace"]
    },
    "stack_trace_fields": ["stack_trace", "stacktrace"],
    "stack_trace_format": "string",
    "version_fields": ["java_version", "language_version"],
    "framework_fields": ["framework"],
    "framework_version_fields": ["framework_version"],
    "detection_patterns": [
      "(?:java\\.\\w+\\.\\w+Exception:)",
      "(?:at [\\w\\.$]+\\([^)]+\\.java:\\d+\\))",
      "(?:Caused by:)"
    ],
    "severity_mappings": {
      "debug": "fine",
      "info": "info",
      "warning": "warning",
      "error": "severe",
      "critical": "severe",
      "fatal": "severe"
    }
  },
  "go": {
    "language": "go",
    "field_mappings": {
      "error_type": ["error_type", "type"],
      "message": "message",
      "stack_trace": ["stack_trace", "stacktrace"]
    },
    "stack_trace_fields": ["stack_trace", "stacktrace"],
    "stack_trace_format": "string",
    "version_fields": ["go_version", "language_version"],
    "framework_fields": ["framework"],
    "framework_version_fields": ["framework_version"],
    "detection_patterns": [
      "(?:goroutine \\d+ \\[[^\\]]+\\]:)",
      "(?:panic:)",
      "(?:\\s+at .+\\.go:\\d+)"
    ],
    "severity_mappings": {
      "debug": "debug",
      "info": "info",
      "warning": "warn",
      "error": "error",
      "critical": "panic",
      "fatal": "fatal"
    }
  },
  "csharp": {
    "language": "csharp",
    "field_mappings": {
      "error_type": ["exception_type", "type"],
      "message": "message",
      "stack_trace": ["stack_trace", "stacktrace"]
    },
    "stack_trace_fields": ["stack_trace", "stacktrace"],
    "stack_trace_format": "string",
    "version_fields": ["csharp_version", "dotnet_version", "language_version"],
    "framework_fields": ["framework"],
    "framework_version_fields": ["framework_version"],
    "detection_patterns": [
      "(?:System\\.\\w+Exception:)",
      "(?:at [\\w\\.]+ in [^:]+:\\d+)"
    ],
    "severity_mappings": {
      "debug": "Debug",
      "info": "Information",
      "warning": "Warning",
      "error": "Error",
      "critical": "Critical",
      "fatal": "Fatal"
    }
  },
  "ruby": {
    "language": "ruby",
    "field_mappings": {
      "error_type": ["exception_class", "type"],
      "message": "message",
      "stack_trace": ["backtrace", "stack_trace"]
    },
    "stack_trace_fields": ["backtrace", "stack_trace"],
    "stack_trace_format": "list",
    "version_fields": ["ruby_version", "language_version"],
    "framework_fields": ["framework"],
    "framework_version_fields": ["framework_version"],
    "detection_patterns": [
      "(?:\\w+Error:)",
      "(?:from [^:]+:\\d+:in `.+')"
    ],
    "severity_mappings": {
      "debug": "DEBUG",
      "info": "INFO",
      "warning": "WARN",
      "error": "ERROR",
      "critical": "FATAL",
      "fatal": "FATAL"
    }
  },
  "rust": {
    "language": "rust",
    "field_mappings": {
      "error_type": ["error_type", "type"],
      "message": "message",
      "stack_trace": ["backtrace", "stack_trace"]
    },
    "stack_trace_fields": ["backtrace", "stack_trace"],
    "stack_trace_format": "list",
    "version_fields": ["rust_version", "language_version"],
    "framework_fields": ["framework"],
    "framework_version_fields": ["framework_version"],
    "detection_patterns": [
      "(?:thread '.*' panicked at '.*')",
      "(?:\\d+: .*\\s+at .*\\.rs:\\d+)",
      "(?:error\\[E\\d+\\]:)"
    ],
    "severity_mappings": {
      "debug": "debug",
      "info": "info",
      "warning": "warn",
      "error": "error",
      "critical": "error",
      "fatal": "fatal"
    }
  },
  "php": {
    "language": "php",
    "field_mappings": {
      "error_type": ["type", "error_type", "class"],
      "message": "message",
      "stack_trace": ["trace", "backtrace", "stack_trace"]
    },
    "stack_trace_fields": ["trace", "backtrace", "stack_trace"],
    "stack_trace_format": "list",
    "version_fields": ["php_version", "language_version"],
    "framework_fields": ["framework"],
    "framework_version_fields": ["framework_version"],
    "detection_patterns": [
      "(?:PHP (Notice|Warning|Error|Fatal error|Parse error):)",
      "(?:Stack trace:)",
      "(?:#\\d+ [^:]+:\\d+)",
      "(?:Call to undefined (method|function))",
      "(?:Uncaught (\\w+Exception|Error):)"
    ],
    "severity_mappings": {
      "debug": "E_NOTICE",
      "info": "E_NOTICE",
      "warning": "E_WARNING",
      "error": "E_ERROR",
      "critical": "E_CORE_ERROR",
      "fatal": "E_CORE_ERROR"
    }
  },
  "scala": {
    "language": "scala",
    "field_mappings": {
      "error_type": ["exception_class", "exception_type", "type", "error_type"],
      "message": "message",
      "stack_trace": ["stack_trace", "stacktrace"]
    },
    "stack_trace_fields": ["stack_trace", "stacktrace"],
    "stack_trace_format": "string",
    "version_fields": ["scala_version", "language_version"],
    "framework_fields": ["framework"],
    "framework_version_fields": ["framework_version"],
    "detection_patterns": [
      "(?:scala\\.\\w+\\.\\w+Exception:)",
      "(?:java\\.\\w+\\.\\w+Exception:)",
      "(?:at [\\w\\.$]+\\([^)]+\\.scala:\\d+\\))",
      "(?:at \\$(line\\d+)\\$.*)",
      "(?:scala\\.MatchError:)",
      "(?:akka\\.\\w+\\.\\w+Exception:)"
    ],
    "severity_mappings": {
      "debug": "debug",
      "info": "info",
      "warning": "warn",
      "error": "error",
      "critical": "critical",
      "fatal": "fatal"
    }
  },
  "elixir": {
    "language": "elixir",
    "field_mappings": {
      "error_type": ["exception", "exception_type", "type", "error_type"],
      "message": "message",
      "stack_trace": ["stacktrace", "stack_trace"]
    },
    "stack_trace_fields": ["stacktrace", "stack_trace"],
    "stack_trace_format": "list",
    "version_fields": ["elixir_version", "language_version"],
    "framework_fields": ["framework"],
    "framework_version_fields": ["framework_version"],
    "detection_patterns": [
      "(?:\\*\\* \\(\\w+(?:\\.\\w+)*(?:Error|Exception)\\) )",
      "(?:\\(\\w+(?:\\.\\w+)*(?:Error|Exception)\\) )",
      "(?:\\(FunctionClauseError\\) )",
      "(?:\\(RuntimeError\\) )",
      "(?:\\(Phoenix\\.[^)]+Error\\) )",
      "(?:\\(Ecto\\.[^)]+Error\\) )",
      "(?:[^\\(]+\\.ex:\\d+: )",
      "(?:    \\(\\w+(?:\\.\\w+)*\\) [^:]+:\\d+: [^\\(]+\\(\\))"
    ],
    "severity_mappings": {
      "debug": "debug",
      "info": "info",
      "warning": "warn",
      "error": "error",
      "critical": "critical",
      "fatal": "fatal"
    }
  },
  "clojure": {
    "language": "clojure",
    "field_mappings": {
      "error_type": ["exception_class", "exception_type", "type", "error_type"],
      "message": "message",
      "stack_trace": ["stack_trace", "stacktrace"]
    },
    "stack_trace_fields": ["stack_trace", "stacktrace"],
    "stack_trace_format": "string",
    "version_fields": ["clojure_version", "language_version"],
    "framework_fields": ["framework"],
    "framework_version_fields": ["framework_version"],
    "detection_patterns": [
      "(?:clojure\\.\\w+\\.\\w+Exception:)",
      "(?:java\\.\\w+\\.\\w+Exception:)",
      "(?:at [\\w\\.$-]+\\([^)]+\\.clj:\\d+\\))",
      "(?:at [\\w\\.$-]+\\(REPL:\\d+\\))",
      "(?:clojure\\.lang\\.\\w+Exception:)",
      "(?:CompilerException java\\.\\w+)",
      "(?:ArityException Wrong number of args)",
      "(?:IllegalArgumentException)",
      "(?:NullPointerException)",
      "(?:ClassCastException)",
      "(?:UnsupportedOperationException)",
      "(?:\\$fn__\\d+\\.invoke)",
      "(?:RuntimeException)"
    ],
    "severity_mappings": {
      "trace": "debug",
      "debug": "debug",
      "info": "info",
      "warning": "warn",
      "warn": "warn",
      "error": "error",
      "critical": "error",
      "fatal": "fatal"
    }
  },
  "typescript": {
    "language": "typescript",
    "field_mappings": {
      "error_type": ["name", "type", "code"],
      "message": "message",
      "stack_trace": ["stack", "stacktrace", "stack_trace"]
    },
    "stack_trace_fields": ["stack", "stacktrace", "stack_trace"],
    "stack_trace_format": "string",
    "version_fields": ["typescript_version", "ts_version", "language_version"],
    "framework_fields": ["framework"],
    "framework_version_fields": ["framework_version"],
    "detection_patterns": [
      "(?:TS\\d+:)",
      "(?:error TS\\d+:)",
      "(?:TypeScript compilation error)",
      "(?:tsc \\(\\d+,\\d+\\):)",
      "(?:at.*\\.ts:\\d+:\\d+)",
      "(?:Type '.*' is not assignable to type)",
      "(?:Cannot find name '.*')",
      "(?:Property '.*' does not exist on type)",
      "(?:Cannot find module '.*')"
    ],
    "severity_mappings": {
      "debug": "debug",
      "info": "info",
      "warning": "warning",
      "error": "error",
      "critical": "error",
      "fatal": "fatal"
    },
    "compiler_options": {
      "strict": true,
      "noImplicitAny": true,
      "strictNullChecks": true,
      "strictFunctionTypes": true,
      "noImplicitReturns": true,
      "noUnusedLocals": false,
      "noUnusedParameters": false
    },
    "file_extensions": [".ts", ".tsx", ".d.ts"],
    "config_files": ["tsconfig.json", "jsconfig.json"]
  }
}