{
  "name": "Backend Language Integration Test Suite",
  "description": "Test cases for validating backend language integration and cross-language capabilities",
  "test_cases": [
    {
      "name": "Python KeyError Test",
      "language": "python",
      "error_data": {
        "exception_type": "KeyError",
        "message": "'user_id'",
        "traceback": [
          "Traceback (most recent call last):",
          "  File \"app.py\", line 42, in get_user",
          "    user_id = data['user_id']",
          "KeyError: 'user_id'"
        ],
        "level": "ERROR",
        "python_version": "3.9.7",
        "framework": "FastAPI",
        "framework_version": "0.68.0"
      },
      "expected_analysis": {
        "confidence": "high"
      },
      "context": {
        "code_snippet": "def get_user(data):\n    user_id = data['user_id']\n    return get_user_by_id(user_id)",
        "function_name": "get_user"
      },
      "tags": [
        "python",
        "key-error",
        "data-access"
      ]
    },
    {
      "name": "Python TypeError Test",
      "language": "python",
      "error_data": {
        "exception_type": "TypeError",
        "message": "cannot unpack non-iterable NoneType object",
        "traceback": [
          "Traceback (most recent call last):",
          "  File \"processor.py\", line 78, in process_data",
          "    name, age = get_user_details(user_id)",
          "TypeError: cannot unpack non-iterable NoneType object"
        ],
        "level": "ERROR",
        "python_version": "3.9.7"
      },
      "expected_analysis": {
        "confidence": "high"
      },
      "context": {
        "code_snippet": "def process_data(user_id):\n    name, age = get_user_details(user_id)\n    return format_user_data(name, age)",
        "function_name": "process_data"
      },
      "tags": [
        "python",
        "type-error",
        "none-handling"
      ]
    },
    {
      "name": "JavaScript TypeError Test",
      "language": "javascript",
      "error_data": {
        "name": "TypeError",
        "message": "Cannot read property 'id' of undefined",
        "stack": "TypeError: Cannot read property 'id' of undefined\n    at getUserId (/app/src/utils.js:45:20)\n    at processRequest (/app/src/controllers/user.js:23:15)\n    at /app/src/routes/index.js:10:12",
        "level": "error",
        "runtime": "Node.js",
        "runtime_version": "14.17.5"
      },
      "expected_analysis": {
        "confidence": "high"
      },
      "context": {
        "code_snippet": "function getUserId(user) {\n  return user.id;\n}",
        "function_name": "getUserId"
      },
      "tags": [
        "javascript",
        "type-error",
        "undefined"
      ]
    },
    {
      "name": "JavaScript Reference Error Test",
      "language": "javascript",
      "error_data": {
        "name": "ReferenceError",
        "message": "usrData is not defined",
        "stack": "ReferenceError: usrData is not defined\n    at saveUserData (/app/src/services/user.js:67:10)\n    at Object.updateUser (/app/src/controllers/user.js:42:8)",
        "level": "error",
        "runtime": "Node.js",
        "runtime_version": "14.17.5"
      },
      "expected_analysis": {
        "confidence": "high"
      },
      "context": {
        "code_snippet": "function saveUserData(userData) {\n  database.save(usrData); // Typo: should be userData\n}",
        "function_name": "saveUserData"
      },
      "tags": [
        "javascript",
        "reference-error",
        "typo"
      ]
    },
    {
      "name": "Java NullPointerException Test",
      "language": "java",
      "error_data": {
        "exception_class": "java.lang.NullPointerException",
        "message": "Cannot invoke \"String.length()\" because \"str\" is null",
        "stack_trace": "java.lang.NullPointerException: Cannot invoke \"String.length()\" because \"str\" is null\n    at com.example.StringProcessor.processString(StringProcessor.java:42)\n    at com.example.Main.main(Main.java:25)",
        "level": "SEVERE",
        "java_version": "11.0.12"
      },
      "expected_analysis": {
        "confidence": "high"
      },
      "context": {
        "code_snippet": "public int processString(String str) {\n    return str.length();\n}",
        "method_params": "String str"
      },
      "tags": [
        "java",
        "null-pointer",
        "string-handling"
      ]
    },
    {
      "name": "Java ConcurrentModificationException Test",
      "language": "java",
      "error_data": {
        "exception_class": "java.util.ConcurrentModificationException",
        "message": "",
        "stack_trace": "java.util.ConcurrentModificationException\n    at java.base/java.util.ArrayList$Itr.checkForComodification(ArrayList.java:1013)\n    at java.base/java.util.ArrayList$Itr.next(ArrayList.java:967)\n    at com.example.ListProcessor.processItems(ListProcessor.java:28)",
        "level": "SEVERE",
        "java_version": "11.0.12"
      },
      "expected_analysis": {
        "confidence": "high"
      },
      "context": {
        "code_snippet": "public void processItems(List<Item> items) {\n    for (Item item : items) {\n        if (item.isExpired()) {\n            items.remove(item);\n        }\n    }\n}",
        "method_params": "List<Item> items"
      },
      "tags": [
        "java",
        "concurrent-modification",
        "collections"
      ]
    },
    {
      "name": "Go Nil Pointer Test",
      "language": "go",
      "error_data": {
        "error_type": "runtime error",
        "message": "nil pointer dereference",
        "stack_trace": "goroutine 1 [running]:\nmain.processValue()\n\t/app/main.go:25\nmain.main()\n\t/app/main.go:12",
        "level": "error",
        "go_version": "1.17.3"
      },
      "expected_analysis": {
        "confidence": "high"
      },
      "context": {
        "code_snippet": "func processValue(value *User) string {\n    return value.Name\n}"
      },
      "tags": [
        "go",
        "nil-pointer",
        "struct-access"
      ]
    },
    {
      "name": "Go Concurrent Map Access Test",
      "language": "go",
      "error_data": {
        "error_type": "runtime error",
        "message": "concurrent map writes",
        "stack_trace": "goroutine 23 [running]:\nruntime.throw(0x4b8818, 0x15)\n\t/usr/local/go/src/runtime/panic.go:774 +0x72 fp=0xc4200ba810 sp=0xc4200ba7e0 pc=0x42c082\nruntime.mapassign_faststr(0x4b9400, 0xc42008e1c0, 0x4bea35, 0xb, 0x0)\n\t/usr/local/go/src/runtime/map_faststr.go:203 +0x39b fp=0xc4200ba880 sp=0xc4200ba810 pc=0x40fccb\nmain.(*SafeCounter).Inc(0xc42008e1c0, 0x4bea35, 0xb)\n\t/app/main.go:38 +0x66 fp=0xc4200ba8d0 sp=0xc4200ba880 pc=0x48ab86",
        "level": "fatal",
        "go_version": "1.17.3"
      },
      "expected_analysis": {
        "confidence": "high"
      },
      "context": {
        "code_snippet": "func (c *Counter) Inc(key string) {\n    c.counters[key]++\n}"
      },
      "tags": [
        "go",
        "concurrency",
        "map-access"
      ]
    },
    {
      "name": "Spring Bean Definition Error",
      "language": "java",
      "error_data": {
        "exception_class": "org.springframework.beans.factory.UnsatisfiedDependencyException",
        "message": "Error creating bean with name 'userService': Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.example.repository.UserRepository' available",
        "stack_trace": "org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userService': Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.example.repository.UserRepository' available\n\tat org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)\n\tat org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)",
        "level": "ERROR",
        "java_version": "11.0.12",
        "framework": "spring",
        "framework_version": "5.3.9"
      },
      "expected_analysis": {
        "confidence": "high",
        "framework": "spring-boot"
      },
      "context": {
        "code_snippet": "@Service\npublic class UserServiceImpl implements UserService {\n    private final UserRepository userRepository;\n    \n    public UserServiceImpl(UserRepository userRepository) {\n        this.userRepository = userRepository;\n    }\n}"
      },
      "tags": [
        "java",
        "spring",
        "dependency-injection"
      ]
    },
    {
      "name": "Gin Router Error",
      "language": "go",
      "error_data": {
        "error_type": "panic",
        "message": "runtime error: invalid memory address or nil pointer dereference [recovered]",
        "stack_trace": "panic: runtime error: invalid memory address or nil pointer dereference [recovered]\n\tpanic: runtime error: invalid memory address or nil pointer dereference\ngoroutine 17 [running]:\ngithub.com/gin-gonic/gin.CustomRecoveryWithWriter.func1(0xd56060, 0xc42021c100, 0xc420416000)\n\t/go/src/github.com/gin-gonic/gin/recovery.go:99 +0x361\npanic(0x761500, 0xfd0090)\n\t/usr/local/go/src/runtime/panic.go:543 +0x2a3\nmain.GetUserHandler(0xc4202eab00)\n\t/app/handlers/user.go:18 +0x9a",
        "level": "fatal",
        "go_version": "1.17.3",
        "framework": "gin",
        "framework_version": "1.7.2"
      },
      "expected_analysis": {
        "confidence": "high",
        "framework": "gin"
      },
      "context": {
        "code_snippet": "func GetUserHandler(c *gin.Context) {\n    id := c.Param(\"id\")\n    user, err := service.GetUserByID(id)\n    c.JSON(200, user)\n}"
      },
      "tags": [
        "go",
        "gin",
        "web-framework",
        "handler"
      ]
    },
    {
      "name": "Ruby NoMethodError (Nil) Test",
      "language": "ruby",
      "error_data": {
        "exception_class": "NoMethodError",
        "message": "undefined method `name' for nil:NilClass",
        "backtrace": [
          "app/models/user.rb:25:in `display_name'",
          "app/controllers/users_controller.rb:10:in `show'",
          "actionpack-6.1.0/lib/action_controller/metal/basic_implicit_render.rb:6:in `send_action'"
        ],
        "level": "error",
        "ruby_version": "3.0.0",
        "framework": "Rails",
        "framework_version": "6.1.0"
      },
      "expected_analysis": {
        "confidence": "high"
      },
      "context": {
        "code_snippet": "def display_name\n  user.name\nend"
      },
      "tags": [
        "ruby",
        "nil-reference",
        "rails"
      ]
    },
    {
      "name": "Ruby ActiveRecord::RecordNotFound Test",
      "language": "ruby",
      "error_data": {
        "exception_class": "ActiveRecord::RecordNotFound",
        "message": "Couldn't find User with ID 123",
        "backtrace": [
          "app/controllers/users_controller.rb:10:in `show'",
          "actionpack-6.1.0/lib/action_controller/metal/basic_implicit_render.rb:6:in `send_action'"
        ],
        "level": "error",
        "ruby_version": "3.0.0",
        "framework": "Rails",
        "framework_version": "6.1.0"
      },
      "expected_analysis": {
        "confidence": "high",
        "framework": "rails"
      },
      "context": {
        "code_snippet": "def show\n  @user = User.find(params[:id])\nend",
        "framework": "rails"
      },
      "tags": [
        "ruby",
        "rails",
        "activerecord",
        "record-not-found"
      ]
    },
    {
      "name": "Ruby Gem LoadError Test",
      "language": "ruby",
      "error_data": {
        "exception_class": "LoadError",
        "message": "cannot load such file -- httparty",
        "backtrace": [
          "/app.rb:5:in `require'",
          "/app.rb:5:in `<main>'"
        ],
        "level": "error",
        "ruby_version": "3.0.0"
      },
      "expected_analysis": {
        "confidence": "high"
      },
      "context": {
        "code_snippet": "require 'httparty'\n\nresponse = HTTParty.get('https://example.com')"
      },
      "tags": [
        "ruby",
        "load-error",
        "missing-gem"
      ]
    },
    {
      "name": "Ruby Sinatra NotFound Test",
      "language": "ruby",
      "error_data": {
        "exception_class": "Sinatra::NotFound",
        "message": "Sinatra::NotFound",
        "backtrace": [
          "sinatra-2.2.0/lib/sinatra/base.rb:1185:in `block in route!'",
          "app.rb:25:in `block in <class:App>'"
        ],
        "level": "error",
        "ruby_version": "3.0.0",
        "framework": "Sinatra",
        "framework_version": "2.2.0"
      },
      "expected_analysis": {
        "confidence": "high",
        "framework": "sinatra"
      },
      "context": {
        "code_snippet": "get '/users/:id' do\n  user = User.find(params[:id])\n  erb :user\nend"
      },
      "tags": [
        "ruby",
        "sinatra",
        "routing",
        "not-found"
      ]
    },
    {
      "name": "Ruby Metaprogramming Method Missing Test",
      "language": "ruby",
      "error_data": {
        "exception_class": "NoMethodError",
        "message": "undefined method `process_call' for #<User:0x00007f8b1a8b8a90> (method_missing)",
        "backtrace": [
          "app/models/user.rb:25:in `method_missing'",
          "app/controllers/users_controller.rb:10:in `show'"
        ],
        "level": "error",
        "ruby_version": "3.0.0"
      },
      "expected_analysis": {
        "confidence": "medium",
        "category": "metaprogramming"
      },
      "context": {
        "code_snippet": "def method_missing(method_name, *args, &block)\n  if method_name.to_s.start_with?('find_by_')\n    # Custom finder method implementation\n  else\n    super\n  end\nend"
      },
      "tags": [
        "ruby",
        "metaprogramming",
        "method-missing"
      ]
    },
    {
      "name": "Rust Unwrap None Test",
      "language": "rust",
      "error_data": {
        "error_type": "Panic",
        "message": "thread 'main' panicked at 'called `Option::unwrap()` on a `None` value', src/main.rs:15:13",
        "backtrace": [
          "0: rust_panic",
          "1: core::panicking::panic_fmt",
          "   at /rustc/d5a82bbd26e1ad8b7401f6a718a9c57c96905483/library/core/src/panicking.rs:142:14",
          "2: core::option::expect_none_failed",
          "   at /rustc/d5a82bbd26e1ad8b7401f6a718a9c57c96905483/library/core/src/option.rs:1267:5",
          "3: core::option::Option<T>::unwrap",
          "   at /rustc/d5a82bbd26e1ad8b7401f6a718a9c57c96905483/library/core/src/option.rs:450:21",
          "4: example::main",
          "   at ./src/main.rs:15:13"
        ],
        "level": "error",
        "rust_version": "1.65.0"
      },
      "expected_analysis": {
        "confidence": "high"
      },
      "context": {
        "code_snippet": "fn get_user_name(user_id: u32) -> String {\n    let user_option = find_user(user_id);\n    let user = user_option.unwrap();\n    user.name\n}"
      },
      "tags": [
        "rust",
        "unwrap",
        "option-none"
      ]
    },
    {
      "name": "Rust Index Out of Bounds Test",
      "language": "rust",
      "error_data": {
        "error_type": "Panic",
        "message": "thread 'main' panicked at 'index out of bounds: the len is 3 but the index is 5', src/main.rs:12:17",
        "backtrace": [
          "0: rust_panic",
          "1: core::panicking::panic_fmt",
          "   at /rustc/d5a82bbd26e1ad8b7401f6a718a9c57c96905483/library/core/src/panicking.rs:142:14",
          "2: core::panicking::panic_bounds_check",
          "   at /rustc/d5a82bbd26e1ad8b7401f6a718a9c57c96905483/library/core/src/panicking.rs:280:5",
          "3: example::get_element",
          "   at ./src/main.rs:12:17"
        ],
        "level": "error",
        "rust_version": "1.65.0"
      },
      "expected_analysis": {
        "confidence": "high"
      },
      "context": {
        "code_snippet": "fn get_element(items: &Vec<String>, index: usize) -> &String {\n    &items[index]\n}"
      },
      "tags": [
        "rust",
        "index",
        "bounds-check"
      ]
    },
    {
      "name": "Rust Actix Web Error Test",
      "language": "rust",
      "error_data": {
        "error_type": "actix_web::Error",
        "message": "Failed to extract path parameters from request: Invalid parameter format",
        "backtrace": [
          "0: actix_web::extract::path::PathExtractor::extract",
          "   at /usr/src/actix-web/src/extract/path.rs:109:18",
          "1: actix_web::handler::Factory::handle",
          "   at /usr/src/actix-web/src/handler.rs:273:39",
          "2: example::handlers::get_user",
          "   at ./src/handlers.rs:42:5"
        ],
        "level": "error",
        "rust_version": "1.65.0",
        "framework": "actix"
      },
      "expected_analysis": {
        "confidence": "high",
        "framework": "actix"
      },
      "context": {
        "code_snippet": "#[get(\"/users/{user_id}\")]\nasync fn get_user(path: web::Path<u32>) -> impl Responder {\n    let user_id = path.into_inner();\n    // Handler implementation\n}"
      },
      "tags": [
        "rust",
        "actix",
        "web-framework",
        "extraction"
      ]
    },
    {
      "name": "Rust Deadlock Test",
      "language": "rust",
      "error_data": {
        "error_type": "Deadlock",
        "message": "all threads are blocked waiting for locks",
        "backtrace": [
          "0: std::sync::mutex::Mutex::lock",
          "   at /rustc/d5a82bbd26e1ad8b7401f6a718a9c57c96905483/library/std/src/sync/mutex.rs:169:16",
          "1: example::process_data",
          "   at ./src/main.rs:32:20",
          "2: example::thread_function",
          "   at ./src/main.rs:45:9"
        ],
        "level": "fatal",
        "rust_version": "1.65.0"
      },
      "expected_analysis": {
        "confidence": "high",
        "category": "concurrency"
      },
      "context": {
        "code_snippet": "fn process_data(mutex_a: &Mutex<Vec<i32>>, mutex_b: &Mutex<HashMap<i32, String>>) {\n    let mut data_a = mutex_a.lock().unwrap();\n    // Some processing\n    let mut data_b = mutex_b.lock().unwrap();\n    // More processing\n}"
      },
      "tags": [
        "rust",
        "concurrency",
        "deadlock",
        "mutex"
      ]
    },
    {
      "name": "Rust Tokio Runtime Error Test",
      "language": "rust",
      "error_data": {
        "error_type": "TokioError",
        "message": "JoinError: task failed to make progress due to I/O blocking operation",
        "backtrace": [
          "0: tokio::task::JoinHandle::await",
          "   at /usr/src/tokio/src/task/join.rs:379:42",
          "1: example::process_async",
          "   at ./src/main.rs:28:25"
        ],
        "level": "error",
        "rust_version": "1.65.0",
        "framework": "tokio"
      },
      "expected_analysis": {
        "confidence": "high",
        "framework": "tokio"
      },
      "context": {
        "code_snippet": "async fn process_async() -> Result<(), Error> {\n    let blocking_task = tokio::task::spawn_blocking(|| {\n        // This is a CPU-intensive operation\n        std::thread::sleep(std::time::Duration::from_secs(5));\n        42\n    });\n    \n    let result = blocking_task.await?;\n    Ok(())\n}"
      },
      "tags": [
        "rust",
        "tokio",
        "async",
        "runtime"
      ]
    }
  ]
}