[pytest]
# Pytest configuration for E2E healing scenario tests

# Test discovery
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Markers
markers =
    asyncio: mark test as asyncio test
    slow: mark test as slow running
    critical: mark test as critical for healing functionality
    cross_language: mark test as cross-language healing test
    security: mark test as security-related healing test
    performance: mark test as performance-related

# Asyncio configuration
# asyncio_mode = auto  # Not supported in current pytest version

# Timeout configuration
# timeout = 300
# timeout_method = thread

# Output options
addopts = 
    -ra
    --strict-markers
    --strict-config
    --showlocals
    --tb=short
    --maxfail=10

# Coverage options
# Run with: pytest --cov=modules --cov-report=html
# to generate coverage report

# Log configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] [%(name)s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Capture settings
# capture = no  # Use -s flag instead

# Warnings
filterwarnings =
    error
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

# Test paths
testpaths = .
norecursedirs = .git .tox __pycache__ *.egg build dist