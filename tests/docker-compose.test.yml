version: '3.8'

services:
  # Test database for chaos experiments
  test-db:
    image: postgres:14-alpine
    environment:
      POSTGRES_USER: chaos_test
      POSTGRES_PASSWORD: chaos_test
      POSTGRES_DB: homeostasis_test
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U chaos_test"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - chaos-net
  
  # Test cache for chaos experiments  
  test-cache:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - chaos-net
  
  # Test message queue
  test-mq:
    image: rabbitmq:3-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: chaos_test
      RABBITMQ_DEFAULT_PASS: chaos_test
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - chaos-net
  
  # Mock external service for testing
  mock-service:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./chaos/mock_responses:/usr/share/nginx/html:ro
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - chaos-net
  
  # Prometheus for metrics collection during chaos tests
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./chaos/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - chaos-net

networks:
  chaos-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16