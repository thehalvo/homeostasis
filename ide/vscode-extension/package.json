{
  "name": "homeostasis-healing",
  "displayName": "Homeostasis Self-Healing",
  "description": "Real-time code healing and error prevention for multiple programming languages",
  "version": "0.1.0",
  "publisher": "homeostasis",
  "engines": {
    "vscode": "^1.74.0"
  },
  "categories": [
    "Other",
    "Debuggers",
    "Linters"
  ],
  "keywords": [
    "self-healing",
    "error-prevention",
    "code-fixing",
    "debugging",
    "auto-repair"
  ],
  "activationEvents": [
    "onLanguage:python",
    "onLanguage:javascript",
    "onLanguage:typescript",
    "onLanguage:java",
    "onLanguage:go",
    "onLanguage:rust",
    "onLanguage:csharp",
    "onLanguage:php",
    "onLanguage:ruby",
    "onLanguage:scala",
    "onLanguage:elixir",
    "onLanguage:clojure",
    "onLanguage:swift",
    "onLanguage:kotlin",
    "onLanguage:dart"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "homeostasis.healFile",
        "title": "Heal Current File",
        "category": "Homeostasis"
      },
      {
        "command": "homeostasis.healWorkspace",
        "title": "Heal Entire Workspace",
        "category": "Homeostasis"
      },
      {
        "command": "homeostasis.enableRealTimeHealing",
        "title": "Enable Real-time Healing",
        "category": "Homeostasis"
      },
      {
        "command": "homeostasis.disableRealTimeHealing",
        "title": "Disable Real-time Healing",
        "category": "Homeostasis"
      },
      {
        "command": "homeostasis.showHealingDashboard",
        "title": "Show Healing Dashboard",
        "category": "Homeostasis"
      },
      {
        "command": "homeostasis.configureTelemetry",
        "title": "Configure Telemetry",
        "category": "Homeostasis"
      },
      {
        "command": "homeostasis.syncSettings",
        "title": "Sync Settings",
        "category": "Homeostasis"
      },
      {
        "command": "homeostasis.createSettingsProfile",
        "title": "Create Settings Profile",
        "category": "Homeostasis"
      },
      {
        "command": "homeostasis.loadSettingsProfile",
        "title": "Load Settings Profile",
        "category": "Homeostasis"
      },
      {
        "command": "homeostasis.exportSettings",
        "title": "Export Settings",
        "category": "Homeostasis"
      },
      {
        "command": "homeostasis.importSettings",
        "title": "Import Settings",
        "category": "Homeostasis"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "command": "homeostasis.healFile",
          "group": "homeostasis",
          "when": "editorHasSelection"
        }
      ],
      "commandPalette": [
        {
          "command": "homeostasis.healFile"
        },
        {
          "command": "homeostasis.healWorkspace"
        },
        {
          "command": "homeostasis.enableRealTimeHealing"
        },
        {
          "command": "homeostasis.disableRealTimeHealing"
        },
        {
          "command": "homeostasis.showHealingDashboard"
        },
        {
          "command": "homeostasis.configureTelemetry"
        },
        {
          "command": "homeostasis.syncSettings"
        },
        {
          "command": "homeostasis.createSettingsProfile"
        },
        {
          "command": "homeostasis.loadSettingsProfile"
        },
        {
          "command": "homeostasis.exportSettings"
        },
        {
          "command": "homeostasis.importSettings"
        }
      ]
    },
    "configuration": {
      "title": "Homeostasis",
      "properties": {
        "homeostasis.serverUrl": {
          "type": "string",
          "default": "http://localhost:8080",
          "description": "URL of the Homeostasis healing server"
        },
        "homeostasis.apiKey": {
          "type": "string",
          "default": "",
          "description": "API key for authentication with the Homeostasis server"
        },
        "homeostasis.realTimeHealing": {
          "type": "boolean",
          "default": true,
          "description": "Enable real-time healing as you type"
        },
        "homeostasis.healingDelay": {
          "type": "number",
          "default": 2000,
          "description": "Delay in milliseconds before triggering healing after typing stops"
        },
        "homeostasis.enabledLanguages": {
          "type": "array",
          "default": ["python", "javascript", "typescript", "java", "go"],
          "description": "List of programming languages to enable healing for"
        },
        "homeostasis.confidenceThreshold": {
          "type": "number",
          "default": 0.7,
          "description": "Minimum confidence threshold for auto-applying fixes (0.0-1.0)"
        },
        "homeostasis.enableTelemetry": {
          "type": "boolean",
          "default": true,
          "description": "Enable telemetry for improving the healing experience"
        },
        "homeostasis.showInlineHints": {
          "type": "boolean",
          "default": true,
          "description": "Show inline hints for potential fixes"
        },
        "homeostasis.enableCodeLens": {
          "type": "boolean",
          "default": true,
          "description": "Enable code lens for error prevention"
        }
      }
    },
    "views": {
      "explorer": [
        {
          "id": "homeostasisHealingView",
          "name": "Homeostasis Healing",
          "when": "homeostasis.enabled"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "homeostasis",
          "title": "Homeostasis",
          "icon": "$(pulse)"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js",
    "package-extension": "vsce package"
  },
  "devDependencies": {
    "@types/vscode": "^1.74.0",
    "@types/node": "16.x",
    "@typescript-eslint/eslint-plugin": "^5.45.0",
    "@typescript-eslint/parser": "^5.45.0",
    "eslint": "^8.28.0",
    "typescript": "^4.9.4",
    "webpack": "^5.76.0",
    "webpack-cli": "^5.0.0",
    "ts-loader": "^9.4.0",
    "@vscode/vsce": "^2.15.0"
  },
  "dependencies": {
    "axios": "^1.6.0",
    "ws": "^8.14.0"
  }
}