name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-20.04
    timeout-minutes: 120  # 2 hour safety limit
    steps:
    - uses: actions/checkout@v3

    - name: Free Disk Space (Ubuntu)
      uses: jlumbroso/free-disk-space@main
      with:
        tool-cache: false
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        docker-images: true
        swap-storage: true

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libldap2-dev libsasl2-dev

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    - name: Run linting
      run: |
        flake8 modules/ services/ orchestrator/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics

    - name: Run tests with monitoring
      env:
        USE_MOCK_TESTS: true
        DISABLE_PERFORMANCE_TRACKING: true
        CI: true
        GITHUB_ACTIONS: true
      timeout-minutes: 120
      run: |
        echo "Starting tests at $(date)"
        echo "Total test files: $(find tests -name 'test_*.py' | wc -l)"
        echo "Initial memory usage:"
        free -h

        # Install pytest-timeout if not already installed
        pip install pytest-timeout

        # Start a background monitor that reports every 60 seconds
        (
          while true; do
            sleep 60
            echo "[MONITOR] Still running at $(date)"
            echo "[MONITOR] Memory usage:"
            free -h
            # Show pytest processes with memory usage
            ps aux --sort=-%mem | head -10 | grep -E 'pytest|python' || true
          done
        ) &
        MONITOR_PID=$!

        # Run tests with real-time output and timeout configuration for Python 3.10
        python -m pytest -c pytest-py310-timeout.ini tests/ \
          -k "not test_concurrent_error_processing_performance" \
          --tb=short \
          -v \
          2>&1 | while IFS= read -r line; do
            echo "[$(date '+%H:%M:%S')] $line"
        done

        # Store exit code
        TEST_EXIT=${PIPESTATUS[0]}

        # Kill the monitor
        kill $MONITOR_PID 2>/dev/null || true

        echo "Final memory usage:"
        free -h

        exit $TEST_EXIT