[pytest]
# Pytest configuration for Python 3.10 with optimizations
# Python 3.10 can have slower test execution, so we optimize for speed

# Minimum version
minversion = 7.0

# Test paths
testpaths = tests

# Python files
python_files = test_*.py

# Python classes
python_classes = Test*

# Python functions
python_functions = test_*

# Output options - minimal output for CI
addopts =
    -q
    --strict-markers
    --tb=short
    --disable-warnings
    -p no:timeout
    --maxfail=50

# Pytest plugins
required_plugins =
    pytest-asyncio>=0.21.0

# Asyncio configuration
asyncio_mode = strict
asyncio_default_fixture_loop_scope = function

# Custom markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    chaos: marks tests as chaos engineering tests
    chaos_low: marks tests as low-level chaos tests
    chaos_medium: marks tests as medium-level chaos tests
    chaos_high: marks tests as high-level chaos tests
    chaos_network: marks tests as network chaos tests
    chaos_resource: marks tests as resource chaos tests
    chaos_service: marks tests as service chaos tests
    performance: marks tests as performance tests
    security: marks tests as security tests
    e2e: marks tests as end-to-end tests
    timeout: marks tests with timeout (from pytest-timeout plugin)

# NO TIMEOUT IN CI - prevents thread exhaustion
# timeout = 300 (removed)
# timeout_method = thread (removed)

# Coverage options
[coverage:run]
source = modules,services,orchestrator
omit =
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    pass